citation("sasLM")
citation("ggbiplot")
citation("Hmisc")
citation("reshape2")
library(sasLM)
library(readxl)
library(dplyr)
library(rstudioapi)
library(devtools)
library(ggbiplot)
library(Hmisc)
library(reshape2)
# Scatterplot comparing E. coli & uidA counts in terms of sample for RS & EF:
uidA_Ecoli_RS_EF <- read_excel('Excel_analyses/uidA_Ecoli_RS_EF.xlsx')
View(uidA_Ecoli_RS_EF)
View(uidA_Ecoli_RS_EF)
uidA_Ecoli_RS_EF <- rename(uidA_Ecoli_RS_EF,
'Ecoli' = 'E. coli (MPN/mL)', 'uidA_RS' = 'uidA_RS (GCN/mL sample)',
'uidA_EF' = 'uidA_EF (GCN/mL sample)')
# Scatterplot comparing E. coli & uidA counts in terms of sample for RS & EF:
uidA_Ecoli_RS_EF <- read_excel('Excel_analyses/uidA_Ecoli_RS_EF.xlsx')
uidA_Ecoli_RS_EF <- rename(uidA_Ecoli_RS_EF,
c('Ecoli' = 'E. coli (MPN/mL)', 'uidA_RS' = 'uidA_RS (GCN/mL sample)',
'uidA_EF' = 'uidA_EF (GCN/mL sample)'))
View(uidA_Ecoli_RS_EF)
# Scatterplot comparing E. coli & uidA counts in terms of sample for RS & EF:
uidA_Ecoli_RS_EF <- read_excel('Excel_analyses/uidA_Ecoli_RS_EF.xlsx')
uidA_Ecoli_RS_EF <- rename(uidA_Ecoli_RS_EF,
c('Ecoli' = 'E. coli (MPN/mL)',
'uidA_RS' = 'uidA_RS (GCN/mL sample)',
'uidA_EF' = 'uidA_EF (GCN/mL sample)'))
uidA_Ecoli_RS_EF <- rename(uidA_Ecoli_RS_EF,
c('E. coli (MPN/mL)' = 'Ecoli',
'uidA_RS' = 'uidA_RS (GCN/mL sample)',
'uidA_EF' = 'uidA_EF (GCN/mL sample)'))
uidA_Ecoli_RS_EF <- rename(uidA_Ecoli_RS_EF,
c('E. coli (MPN/mL)' = 'Ecoli',
'uidA_RS (GCN/mL sample)' = 'uidA_RS',
'uidA_EF (GCN/mL sample)' = 'uidA_EF'))
# Scatterplot comparing E. coli & uidA counts in terms of sample for RS & EF:
uidA_Ecoli_RS_EF <- read_excel('Excel_analyses/uidA_Ecoli_RS_EF.xlsx')
uidA_Ecoli_RS_EF <- rename(uidA_Ecoli_RS_EF,
c('E. coli (MPN/mL)' = 'Ecoli',
'uidA_RS (GCN/mL sample)' = 'uidA_RS',
'uidA_EF (GCN/mL sample)' = 'uidA_EF'))
View(uidA_Ecoli_RS_EF)
colnames(uidA_Ecoli_RS_EF)
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = c('uidA_RS', 'uidA_EF'), y = 'Ecoli'))
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = 'uidA_RS', y = 'Ecoli'))
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA_RS, y = Ecoli))
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA_RS, y = Ecoli)) +
geom_point()
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = c(uidA_RS, uidA_EF), y = Ecoli)) +
geom_point()
uidA_Ecoli_RS_EF_scatterplot
# Scatterplot comparing E. coli & uidA counts in terms of sample for RS & EF:
uidA_Ecoli_RS_EF <- read_excel('Excel_analyses/uidA_Ecoli_RS_EF.xlsx')
uidA_Ecoli_RS_EF <- rename(uidA_Ecoli_RS_EF,
c('E. coli (MPN/mL)' = 'Ecoli',
'uidA (GCN/mL sample)' = 'uidA'))
View(uidA_Ecoli_RS_EF)
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli)) +
geom_point()
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli), fill = Source) +
geom_point()
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli), fill = "Source") +
geom_point()
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli), fill = "Source") +
geom_point()
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, fill = "Source")) +
geom_point()
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, fill = Source)) +
geom_point()
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli)) +
geom_point(colour = Source)
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli)) +
geom_point(colour = "Source")
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, fill = Source)) +
geom_point()
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_point()
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_point(size = 3)
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(size = 3)
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(size = 3)
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(size = 2)
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(width = 0.1, height = 0.1, size = 2)
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(width = 1, height = 1, size = 2)
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
<- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(width = 0.5, height = 0.5, size = 2)
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(width = 0.5, height = 0.5, size = 2)
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(width = 0.25, height = 0.25, size = 2)
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(width = 0.2, height = 0.2, size = 2)
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(width = 0.2, height = 0.2, size = 2.5)
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(width = 0.2, height = 0.2, size = 2.5) +
labs(x = "uidA (GCN per mL of sample)", y = "E. coli (MPN per mL)")
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(width = 0.2, height = 0.2, size = 2.5) +
labs(x = "uidA (GCN per mL of sample)", y = "E. coli (MPN per mL)") +
theme(legend.title = element_text(face = "bold"))
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(width = 0.2, height = 0.2, size = 2.5) +
labs(x = "uidA (GCN per mL of sample)", y = "E. coli (MPN per mL)", face = "bold") +
theme(legend.title = element_text(face = "bold"))
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(width = 0.2, height = 0.2, size = 2.5) +
labs(x = "uidA (GCN per mL of sample)", y = "E. coli (MPN per mL)") +
theme(legend.title = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source, label = Event)) +
geom_jitter(width = 0.2, height = 0.2, size = 2.5) +
labs(x = "uidA (GCN per mL of sample)", y = "E. coli (MPN per mL)") +
theme(legend.title = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
library(sasLM)
library(readxl)
library(dplyr)
library(rstudioapi)
library(devtools)
library(ggbiplot)
library(Hmisc)
library(reshape2)
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source, label = Event)) +
geom_jitter(width = 0.2, height = 0.2, size = 2.5) +
labs(x = "uidA (GCN per mL of sample)", y = "E. coli (MPN per mL)") +
theme(legend.title = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(width = 0.2, height = 0.2, size = 2.5) +
labs(x = "uidA (GCN per mL of sample)", y = "E. coli (MPN per mL)") +
theme(legend.title = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")) +
geom_text(aes(label = Event))
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(width = 0.2, height = 0.2, size = 2.5) +
labs(x = "uidA (GCN per mL of sample)", y = "E. coli (MPN per mL)") +
theme(legend.title = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")) +
geom_text(aes(label = Event), hjust = 0.1, vjust = 0.1)
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(width = 0.2, height = 0.2, size = 2.5) +
labs(x = "uidA (GCN per mL of sample)", y = "E. coli (MPN per mL)") +
theme(legend.title = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")) +
geom_text(aes(label = Event), hjust = 0.2, vjust = 0.2)
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source)) +
geom_jitter(width = 0.2, height = 0.2, size = 2.5) +
labs(x = "uidA (GCN per mL of sample)", y = "E. coli (MPN per mL)") +
theme(legend.title = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold")) +
geom_text(aes(label = Event), hjust = 0.5, vjust = 0.5)
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
install.packages("ggrepel") # Contains function to point label to datapoint's new jittered position.
library(ggrepel)
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source, label = Event)) +
geom_jitter(width = 0.2, height = 0.2, size = 2.5) +
geom_label_repel() +
labs(x = "uidA (GCN per mL of sample)", y = "E. coli (MPN per mL)") +
theme(legend.title = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot <- ggplot(uidA_Ecoli_RS_EF, aes(x = uidA, y = Ecoli, color = Source, label = Event)) +
geom_jitter(size = 2.5) +
geom_label_repel() +
labs(x = "uidA (GCN per mL of sample)", y = "E. coli (MPN per mL)") +
theme(legend.title = element_text(face = "bold"),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"))
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
uidA_Ecoli_RS_EF_scatterplot
?ggbiplot
### PC2 vs PC3:
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_23.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot <- ggbiplot(eff_PCA_out, choices = c(2,3), ellipse = T, groups = as.factor(unique(eff_PCA_in$Time))) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black')
print(eff_PCA_out_biplot)
dev.off() # Tell R you're done adding content to the pdf file.
## Biplots:
### PC1 vs PC2:
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_12.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_12 <- ggbiplot(eff_PCA_out, ellipse = T, groups = as.factor(unique(eff_PCA_in$Time))) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black')
print(eff_PCA_out_biplot_12)
eff_PCA_out_biplot_12
# Rota:
Rota <- read_excel('Excel_analyses/Rota.xls') %>%
input.cleaning()
library(sasLM)
library(readxl)
library(dplyr)
library(rstudioapi)
library(devtools)
library(ggbiplot)
library(Hmisc)
library(reshape2)
# Rota:
Rota <- read_excel('Excel_analyses/Rota.xls') %>%
input.cleaning()
dir.create('R_analyses_output/Rota') # Create folder to contain output files.
# uidA:
uidA <- read_excel('Excel_analyses/uidA.xls') %>%
input.cleaning()
dir.create('R_analyses_output/uidA') # Create folder to contain output files.
eff_PCA_in <- read_excel('Excel_analyses/eff_PCA_in.xlsx')
eff_PCA_in
eff_PCA_out <- prcomp(eff_PCA_in[,c(2:ncol(eff_PCA_in))], center = T, scale = T)
eff_PCA_out_summary <- summary(eff_PCA_out) # Get importance of components.
capture.output(eff_PCA_out_summary, file = 'R_analyses_output/PCA/eff_PCA_out_summary.txt')
## Biplots:
### PC1 vs PC2:
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_12.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_12 <- ggbiplot(eff_PCA_out, ellipse = T, groups = as.factor(unique(eff_PCA_in$Time))) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black')
print(eff_PCA_out_biplot_12)
dev.off() # Tell R you're done adding content to the pdf file.
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_noAxes_12.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_noAxes_12 <- ggbiplot(eff_PCA_out, ellipse = T, groups = as.factor(unique(eff_PCA_in$Time)), var.axes = F) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black')
print(eff_PCA_out_biplot_noAxes_12)
dev.off() # Tell R you're done adding content to the pdf file.
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_12.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_12 <- ggbiplot(eff_PCA_out, ellipse = T, groups = as.factor(unique(eff_PCA_in$Time))) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black')
print(eff_PCA_out_biplot_12)
dev.off() # Tell R you're done adding content to the pdf file.
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_noAxes_12.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_noAxes_12 <- ggbiplot(eff_PCA_out, ellipse = T, groups = as.factor(unique(eff_PCA_in$Time)), var.axes = F) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black')
print(eff_PCA_out_biplot_noAxes_12)
dev.off() # Tell R you're done adding content to the pdf file.
### PC2 vs PC3:
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_23.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_23 <- ggbiplot(eff_PCA_out, choices = c(2,3), ellipse = T, groups = as.factor(unique(eff_PCA_in$Time))) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black')
print(eff_PCA_out_biplot_23)
dev.off() # Tell R you're done adding content to the pdf file.
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_noAxes_23.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_noAxes_23 <- ggbiplot(eff_PCA_out, choices = c(2,3), ellipse = T, groups = as.factor(unique(eff_PCA_in$Time)), var.axes = F) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black')
print(eff_PCA_out_biplot_noAxes_23)
dev.off() # Tell R you're done adding content to the pdf file.
library(sasLM)
library(readxl)
library(dplyr)
library(rstudioapi)
library(devtools)
library(ggbiplot)
library(Hmisc)
library(reshape2)
## Biplots:
### PC1 vs PC2:
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_12.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_12 <- ggbiplot(eff_PCA_out, ellipse = T, groups = as.factor(unique(eff_PCA_in$Time))) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black')
print(eff_PCA_out_biplot_12)
dev.off() # Tell R you're done adding content to the pdf file.
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_noAxes_12.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_noAxes_12 <- ggbiplot(eff_PCA_out, ellipse = T, groups = as.factor(unique(eff_PCA_in$Time)), var.axes = F) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black')
print(eff_PCA_out_biplot_noAxes_12)
dev.off() # Tell R you're done adding content to the pdf file.
### PC2 vs PC3:
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_23.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_23 <- ggbiplot(eff_PCA_out, choices = c(2,3), ellipse = T, groups = as.factor(unique(eff_PCA_in$Time))) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black')
print(eff_PCA_out_biplot_23)
dev.off() # Tell R you're done adding content to the pdf file.
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_noAxes_23.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_noAxes_23 <- ggbiplot(eff_PCA_out, choices = c(2,3), ellipse = T, groups = as.factor(unique(eff_PCA_in$Time)), var.axes = F) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black')
print(eff_PCA_out_biplot_noAxes_23)
dev.off() # Tell R you're done adding content to the pdf file.
### PC1 vs PC3:
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_13.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_13 <- ggbiplot(eff_PCA_out, choices = c(1,3), ellipse = T, groups = as.factor(unique(eff_PCA_in$Time))) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black')
print(eff_PCA_out_biplot_13)
dev.off() # Tell R you're done adding content to the pdf file.
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_noAxes_13.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_noAxes_13 <- ggbiplot(eff_PCA_out, choices = c(1,3), ellipse = T, groups = as.factor(unique(eff_PCA_in$Time)), var.axes = F) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black')
print(eff_PCA_out_biplot_noAxes_13)
dev.off() # Tell R you're done adding content to the pdf file.
capture.output(eff_PCA_out_summary, file = 'R_analyses_output/PCA/eff_PCA_out_summary.csv')
install.packages("report")
library(report)
cite_packages()
citation("sasLM") # How to cite package in quotation marks.
citation("readxl")
citation("dplyr")
citation("rstudioapi")
citation("devtools")
citation("ggbiplot")
citation("Hmisc")
citation("reshape2")
library(sasLM)
library(readxl)
library(dplyr)
library(rstudioapi)
library(devtools)
library(ggbiplot)
library(Hmisc)
library(reshape2)
library(report)
cite_packages()
sessionInfo() # Info on installed packages.
RStudio.Version() # Contain "copy-and-paste" reference entry.
library(sasLM)
library(readxl)
library(dplyr)
library(rstudioapi)
library(devtools)
library(ggbiplot)
library(Hmisc)
library(reshape2)
library(report)
cite_packages() # Get references for all packages used.
sessionInfo()
library(sasLM)
library(readxl)
library(dplyr)
library(rstudioapi)
library(devtools)
library(ggbiplot)
library(Hmisc)
library(reshape2)
library(report)
cite_packages() # Get references for all packages used.
RStudio.Version() # Contain "copy-and-paste" reference entry for RStudio.
library(sasLM)
library(readxl)
library(dplyr)
library(rstudioapi)
library(devtools)
library(ggbiplot)
library(Hmisc)
library(reshape2)
library(report)
## Biplots:
### PC1 vs PC2:
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_12.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_12 <- ggbiplot(eff_PCA_out, ellipse = T, groups = as.factor(unique(eff_PCA_in$Time))) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black') +
labs(fill = "Events")
print(eff_PCA_out_biplot_12)
dev.off() # Tell R you're done adding content to the pdf file.
eff_PCA_out_biplot_12
?ggbiplot
View(eff_PCA_in)
eff_PCA_out_biplot_12 <- ggbiplot(eff_PCA_out, ellipse = T, fill = Time, groups = as.factor(unique(eff_PCA_in$Time))) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black')
eff_PCA_out_biplot_12
?ggbiplot
eff_PCA_out_biplot_12 <- ggbiplot(eff_PCA_out, ellipse = T, groups = as.factor(unique(eff_PCA_in$Time))) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black') +
guides(color=guide_legend("Legend title"))
eff_PCA_out_biplot_12
eff_PCA_out_biplot_12 <- ggbiplot(eff_PCA_out, ellipse = T, groups = as.factor(unique(eff_PCA_in$Time))) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black') +
guides(color=guide_legend("Events"))
eff_PCA_out_biplot_12
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_12.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_12 <- ggbiplot(eff_PCA_out, ellipse = T, groups = as.factor(unique(eff_PCA_in$Time))) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black') +
guides(color=guide_legend("Events"))
print(eff_PCA_out_biplot_12)
dev.off() # Tell R you're done adding content to the pdf file.
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_noAxes_12.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_noAxes_12 <- ggbiplot(eff_PCA_out, ellipse = T, groups = as.factor(unique(eff_PCA_in$Time)), var.axes = F) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black') +
guides(color=guide_legend("Events"))
print(eff_PCA_out_biplot_noAxes_12)
dev.off() # Tell R you're done adding content to the pdf file.
### PC2 vs PC3:
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_23.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_23 <- ggbiplot(eff_PCA_out, choices = c(2,3), ellipse = T, groups = as.factor(unique(eff_PCA_in$Time))) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black') +
guides(color=guide_legend("Events"))
print(eff_PCA_out_biplot_23)
dev.off() # Tell R you're done adding content to the pdf file.
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_noAxes_23.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_noAxes_23 <- ggbiplot(eff_PCA_out, choices = c(2,3), ellipse = T, groups = as.factor(unique(eff_PCA_in$Time)), var.axes = F) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black') +
guides(color=guide_legend("Events"))
print(eff_PCA_out_biplot_noAxes_23)
dev.off() # Tell R you're done adding content to the pdf file.
### PC1 vs PC3:
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_13.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_13 <- ggbiplot(eff_PCA_out, choices = c(1,3), ellipse = T, groups = as.factor(unique(eff_PCA_in$Time))) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black') +
guides(color=guide_legend("Events"))
print(eff_PCA_out_biplot_13)
dev.off() # Tell R you're done adding content to the pdf file.
pdf('R_analyses_output/PCA/eff_PCA_out_biplot_noAxes_13.pdf', width = 13, height = 8) # Create the pdf output file.
eff_PCA_out_biplot_noAxes_13 <- ggbiplot(eff_PCA_out, choices = c(1,3), ellipse = T, groups = as.factor(unique(eff_PCA_in$Time)), var.axes = F) +
geom_text(label = eff_PCA_in$Time, color = 'black', size = 4, position = position_jitter(width = .1, height = .1)) +
geom_point(shape = 21, colour = 'black', fill = 'black') +
guides(color=guide_legend("Events"))
print(eff_PCA_out_biplot_noAxes_13)
dev.off() # Tell R you're done adding content to the pdf file.
