<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0617.1133                               -->
<workbook original-version='18.1' source-build='2021.1.3 (20211.21.0617.1133)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='eff_Spearman_out_melted' inline='true' name='federated.0kkmfte0zkziqb16csknh0foqejv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='eff_Spearman_out_coeff_melted' name='textscan.1yue37m10jr2dv1a2p3qr0n417ed'>
            <connection class='textscan' directory='C:/TL/Work/Research/Dr. Uyaguari/AG/210621 - AG thesis/Analyses/qPCR analysis/R_analyses_output/Spearman' filename='eff_Spearman_out_coeff_melted.csv' password='' server='' />
          </named-connection>
          <named-connection caption='eff_Spearman_out_P_melted' name='textscan.07g8y7t1i7fvek19w6w2v1gd3zh7'>
            <connection class='textscan' directory='C:/TL/Work/Research/Dr. Uyaguari/AG/210621 - AG thesis/Analyses/qPCR analysis/R_analyses_output/Spearman' filename='eff_Spearman_out_P_melted.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.07g8y7t1i7fvek19w6w2v1gd3zh7' name='eff_Spearman_out_P_melted.csv' table='[eff_Spearman_out_P_melted#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='Var1' ordinal='0' />
            <column datatype='string' name='Var2' ordinal='1' />
            <column datatype='real' name='value' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.07g8y7t1i7fvek19w6w2v1gd3zh7' name='eff_Spearman_out_P_melted.csv' table='[eff_Spearman_out_P_melted#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='string' name='Var1' ordinal='0' />
              <column datatype='string' name='Var2' ordinal='1' />
              <column datatype='real' name='value' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.07g8y7t1i7fvek19w6w2v1gd3zh7' name='eff_Spearman_out_coeff_melted.csv' table='[eff_Spearman_out_coeff_melted#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='string' name='Var1' ordinal='0' />
              <column datatype='string' name='Var2' ordinal='1' />
              <column datatype='real' name='value' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Var1 (eff_Spearman_out_coeff_melted.csv)]' value='[eff_Spearman_out_coeff_melted.csv].[Var1]' />
          <map key='[Var1]' value='[eff_Spearman_out_P_melted.csv].[Var1]' />
          <map key='[Var2 (eff_Spearman_out_coeff_melted.csv)]' value='[eff_Spearman_out_coeff_melted.csv].[Var2]' />
          <map key='[Var2]' value='[eff_Spearman_out_P_melted.csv].[Var2]' />
          <map key='[value (eff_Spearman_out_coeff_melted.csv)]' value='[eff_Spearman_out_coeff_melted.csv].[value]' />
          <map key='[value]' value='[eff_Spearman_out_P_melted.csv].[value]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[eff_Spearman_out_P_melted.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[eff_Spearman_out_coeff_melted.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Var1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Var1]</local-name>
            <parent-name>[eff_Spearman_out_P_melted.csv]</parent-name>
            <remote-alias>Var1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[eff_Spearman_out_P_melted.csv_DED37106F5D74188BA2CDBFC21605A36]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Var2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Var2]</local-name>
            <parent-name>[eff_Spearman_out_P_melted.csv]</parent-name>
            <remote-alias>Var2</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[eff_Spearman_out_P_melted.csv_DED37106F5D74188BA2CDBFC21605A36]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[eff_Spearman_out_P_melted.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[eff_Spearman_out_P_melted.csv_DED37106F5D74188BA2CDBFC21605A36]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Var1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Var1 (eff_Spearman_out_coeff_melted.csv)]</local-name>
            <parent-name>[eff_Spearman_out_coeff_melted.csv]</parent-name>
            <remote-alias>Var1</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[eff_Spearman_out_coeff_melted.csv_86000B813612416DB6820804FC9C169D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Var2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Var2 (eff_Spearman_out_coeff_melted.csv)]</local-name>
            <parent-name>[eff_Spearman_out_coeff_melted.csv]</parent-name>
            <remote-alias>Var2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[eff_Spearman_out_coeff_melted.csv_86000B813612416DB6820804FC9C169D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value (eff_Spearman_out_coeff_melted.csv)]</local-name>
            <parent-name>[eff_Spearman_out_coeff_melted.csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[eff_Spearman_out_coeff_melted.csv_86000B813612416DB6820804FC9C169D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='F1 (eff Spearman out coeff melted.csv)' datatype='integer' hidden='true' name='[F1 (eff_Spearman_out_coeff_melted.csv)]' role='measure' type='quantitative' />
      <column caption='Var1 (eff Spearman out coeff melted.csv)' datatype='string' name='[Var1 (eff_Spearman_out_coeff_melted.csv)]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Adeno_logGCpermLsample&quot;' value='Adenovirus' />
          <alias key='&quot;CrAss_logGCpermLsample&quot;' value='CrAssphage' />
          <alias key='&quot;Cumulative 3-day pre-sampling-day precip (mm)&quot;' value='Precipitation' />
          <alias key='&quot;log(BOD (mg/L))&quot;' value='BOD' />
          <alias key='&quot;log(cBOD (mg/L))&quot;' value='cBOD' />
          <alias key='&quot;log(COD (mg/L))&quot;' value='COD' />
          <alias key='&quot;log(E-coli (MPN/mL))&quot;' value='𝘌. 𝘤𝘰𝘭𝘪' />
          <alias key='&quot;log(Fecal (MPN/mL))&quot;' value='Fecal coliform' />
          <alias key='&quot;log(Filtered UVT_Grab (\%))&quot;' value='Grab filtered UVT' />
          <alias key='&quot;log(Grab Flow (MLD))&quot;' value='Grab flow' />
          <alias key='&quot;log(Grab Temp (C))&quot;' value='Grab temperature' />
          <alias key='&quot;log(Mean temp (K))&quot;' value='Mean temperature' />
          <alias key='&quot;log(NH4-N (mg/L))&quot;' value='NH4-N' />
          <alias key='&quot;log(NOx-N (mg/L))&quot;' value='NOx-N' />
          <alias key='&quot;log(PO4-P (mg/L))&quot;' value='PO4-P' />
          <alias key='&quot;log(Raw Flow (MLD))&quot;' value='Raw flow' />
          <alias key='&quot;log(sCOD (mg/L))&quot;' value='sCOD' />
          <alias key='&quot;log(TN (mg/L))&quot;' value='TN' />
          <alias key='&quot;log(TOC (mg/L))&quot;' value='TOC' />
          <alias key='&quot;log(TP (mg/L))&quot;' value='TP' />
          <alias key='&quot;log(TS (mg/L))&quot;' value='TS' />
          <alias key='&quot;log(TSS (mg/L))&quot;' value='TSS' />
          <alias key='&quot;log(Turbidity (NTU))&quot;' value='Turbidity' />
          <alias key='&quot;pH_Grab&quot;' value='Grab pH' />
          <alias key='&quot;PMMV_logGCpermLsample&quot;' value='PMMV' />
          <alias key='&quot;uidA_logGCpermLsample&quot;' value='𝘶𝘪𝘥𝘈' />
        </aliases>
      </column>
      <column caption='Var11' datatype='string' name='[Var1]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;log(Mean temp (K))&quot;' value='log(Mean Temp (K))' />
        </aliases>
      </column>
      <column caption='Parameters' datatype='string' name='[Var2 (eff_Spearman_out_coeff_melted.csv)]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Adeno_logGCpermLsample&quot;' value='Adenovirus' />
          <alias key='&quot;CrAss_logGCpermLsample&quot;' value='CrAssphage' />
          <alias key='&quot;Cumulative 3-day pre-sampling-day precip (mm)&quot;' value='Precipitation' />
          <alias key='&quot;log(BOD (mg/L))&quot;' value='BOD' />
          <alias key='&quot;log(cBOD (mg/L))&quot;' value='cBOD' />
          <alias key='&quot;log(COD (mg/L))&quot;' value='COD' />
          <alias key='&quot;log(E-coli (MPN/mL))&quot;' value='𝘌. 𝘤𝘰𝘭𝘪' />
          <alias key='&quot;log(Fecal (MPN/mL))&quot;' value='Fecal coliform' />
          <alias key='&quot;log(Filtered UVT_Grab (\%))&quot;' value='Grab filtered UVT' />
          <alias key='&quot;log(Grab Flow (MLD))&quot;' value='Grab flow' />
          <alias key='&quot;log(Grab Temp (C))&quot;' value='Grab temperature' />
          <alias key='&quot;log(Mean temp (K))&quot;' value='Mean temperature' />
          <alias key='&quot;log(NH4-N (mg/L))&quot;' value='NH4-N' />
          <alias key='&quot;log(NOx-N (mg/L))&quot;' value='NOx-N' />
          <alias key='&quot;log(PO4-P (mg/L))&quot;' value='PO4-P' />
          <alias key='&quot;log(Raw Flow (MLD))&quot;' value='Raw flow' />
          <alias key='&quot;log(sCOD (mg/L))&quot;' value='sCOD' />
          <alias key='&quot;log(TN (mg/L))&quot;' value='TN' />
          <alias key='&quot;log(TOC (mg/L))&quot;' value='TOC' />
          <alias key='&quot;log(TP (mg/L))&quot;' value='TP' />
          <alias key='&quot;log(TS (mg/L))&quot;' value='TS' />
          <alias key='&quot;log(TSS (mg/L))&quot;' value='TSS' />
          <alias key='&quot;log(Turbidity (NTU))&quot;' value='Turbidity' />
          <alias key='&quot;pH_Grab&quot;' value='Grab pH' />
          <alias key='&quot;PMMV_logGCpermLsample&quot;' value='PMMV' />
          <alias key='&quot;uidA_logGCpermLsample&quot;' value='𝘶𝘪𝘥𝘈' />
        </aliases>
      </column>
      <column caption='Var21' datatype='string' name='[Var2]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;log(Mean temp (K))&quot;' value='log(Mean Temp (K))' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='eff_Spearman_out_P_melted.csv' datatype='table' name='[__tableau_internal_object_id__].[eff_Spearman_out_P_melted.csv_DED37106F5D74188BA2CDBFC21605A36]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='eff_Spearman_out_coeff_melted.csv' datatype='table' name='[__tableau_internal_object_id__].[eff_Spearman_out_coeff_melted.csv_86000B813612416DB6820804FC9C169D]' role='measure' type='quantitative' />
      <column caption='value (eff Spearman out coeff melted.csv)' datatype='real' name='[value (eff_Spearman_out_coeff_melted.csv)]' role='measure' type='quantitative' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='eff_Spearman_out_P_melted.csv' id='eff_Spearman_out_P_melted.csv_DED37106F5D74188BA2CDBFC21605A36'>
            <properties context=''>
              <relation connection='textscan.07g8y7t1i7fvek19w6w2v1gd3zh7' name='eff_Spearman_out_P_melted.csv' table='[eff_Spearman_out_P_melted#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='Var1' ordinal='0' />
                  <column datatype='string' name='Var2' ordinal='1' />
                  <column datatype='real' name='value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='eff_Spearman_out_coeff_melted.csv' id='eff_Spearman_out_coeff_melted.csv_86000B813612416DB6820804FC9C169D'>
            <properties context=''>
              <relation connection='textscan.07g8y7t1i7fvek19w6w2v1gd3zh7' name='eff_Spearman_out_coeff_melted.csv' table='[eff_Spearman_out_coeff_melted#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='Var1' ordinal='0' />
                  <column datatype='string' name='Var2' ordinal='1' />
                  <column datatype='real' name='value' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[value]' />
              <expression op='[value (eff_Spearman_out_coeff_melted.csv)]' />
            </expression>
            <first-end-point object-id='eff_Spearman_out_P_melted.csv_DED37106F5D74188BA2CDBFC21605A36' />
            <second-end-point object-id='eff_Spearman_out_coeff_melted.csv_86000B813612416DB6820804FC9C169D' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='P-values'>
      <layout-options export-no-caption='true' export-no-title='true' export-orientation='landscape' export-smart-breaks='false' />
      <table>
        <view>
          <datasources>
            <datasource caption='eff_Spearman_out_melted' name='federated.0kkmfte0zkziqb16csknh0foqejv' />
          </datasources>
          <datasource-dependencies datasource='federated.0kkmfte0zkziqb16csknh0foqejv'>
            <column caption='Var11' datatype='string' name='[Var1]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;log(Mean temp (K))&quot;' value='log(Mean Temp (K))' />
              </aliases>
            </column>
            <column caption='Var21' datatype='string' name='[Var2]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;log(Mean temp (K))&quot;' value='log(Mean Temp (K))' />
              </aliases>
            </column>
            <column-instance column='[Var1]' derivation='None' name='[none:Var1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Var2]' derivation='None' name='[none:Var2:nk]' pivot='key' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Var1:nk]' />
              <groupfilter function='member' level='[none:Var1:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;CrAss_logGCpermLsample&quot;</bucket>
              <bucket>&quot;uidA_logGCpermLsample&quot;</bucket>
              <bucket>&quot;log(Grab Temp (C))&quot;</bucket>
              <bucket>&quot;log(Mean temp (K))&quot;</bucket>
              <bucket>&quot;log(Filtered UVT_Grab (\%))&quot;</bucket>
              <bucket>&quot;log(NOx-N (mg/L))&quot;</bucket>
              <bucket>&quot;log(TS (mg/L))&quot;</bucket>
              <bucket>&quot;Adeno_logGCpermLsample&quot;</bucket>
              <bucket>&quot;Cumulative 3-day pre-sampling-day precip (mm)&quot;</bucket>
              <bucket>&quot;log(BOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(cBOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(COD (mg/L))&quot;</bucket>
              <bucket>&quot;log(TOC (mg/L))&quot;</bucket>
              <bucket>&quot;log(E-coli (MPN/mL))&quot;</bucket>
              <bucket>&quot;log(Fecal (MPN/mL))&quot;</bucket>
              <bucket>&quot;log(Grab Flow (MLD))&quot;</bucket>
              <bucket>&quot;log(NH4-N (mg/L))&quot;</bucket>
              <bucket>&quot;log(PO4-P (mg/L))&quot;</bucket>
              <bucket>&quot;log(Raw Flow (MLD))&quot;</bucket>
              <bucket>&quot;log(sCOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(TN (mg/L))&quot;</bucket>
              <bucket>&quot;log(TP (mg/L))&quot;</bucket>
              <bucket>&quot;log(TSS (mg/L))&quot;</bucket>
              <bucket>&quot;log(Turbidity (NTU))&quot;</bucket>
              <bucket>&quot;pH_Grab&quot;</bucket>
              <bucket>&quot;PMMV_logGCpermLsample&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;CrAss_logGCpermLsample&quot;</bucket>
              <bucket>&quot;uidA_logGCpermLsample&quot;</bucket>
              <bucket>&quot;log(Grab Temp (C))&quot;</bucket>
              <bucket>&quot;Adeno_logGCpermLsample&quot;</bucket>
              <bucket>&quot;Cumulative 3-day pre-sampling-day precip (mm)&quot;</bucket>
              <bucket>&quot;log(BOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(cBOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(COD (mg/L))&quot;</bucket>
              <bucket>&quot;log(TOC (mg/L))&quot;</bucket>
              <bucket>&quot;log(E-coli (MPN/mL))&quot;</bucket>
              <bucket>&quot;log(Fecal (MPN/mL))&quot;</bucket>
              <bucket>&quot;log(Filtered UVT_Grab (\%))&quot;</bucket>
              <bucket>&quot;log(Grab Flow (MLD))&quot;</bucket>
              <bucket>&quot;log(Mean temp (K))&quot;</bucket>
              <bucket>&quot;log(NH4-N (mg/L))&quot;</bucket>
              <bucket>&quot;log(NOx-N (mg/L))&quot;</bucket>
              <bucket>&quot;log(PO4-P (mg/L))&quot;</bucket>
              <bucket>&quot;log(Raw Flow (MLD))&quot;</bucket>
              <bucket>&quot;log(sCOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(TN (mg/L))&quot;</bucket>
              <bucket>&quot;log(TP (mg/L))&quot;</bucket>
              <bucket>&quot;log(TS (mg/L))&quot;</bucket>
              <bucket>&quot;log(TSS (mg/L))&quot;</bucket>
              <bucket>&quot;log(Turbidity (NTU))&quot;</bucket>
              <bucket>&quot;pH_Grab&quot;</bucket>
              <bucket>&quot;PMMV_logGCpermLsample&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1:nk]' value='25' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2:nk]' value='224' />
            <format attr='height' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1:nk]' value='252' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Tableau Semibold' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kkmfte0zkziqb16csknh0foqejv].[sum:value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.80160218477249146' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2:nk]</rows>
        <cols>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1:nk]</cols>
      </table>
      <simple-id uuid='{EEFB09ED-6D22-43EB-B6B0-F573BF62D3BD}' />
    </worksheet>
    <worksheet name='Sandbox'>
      <layout-options export-no-caption='true' export-no-title='true' export-orientation='landscape' export-smart-breaks='false' />
      <table>
        <view>
          <datasources>
            <datasource caption='eff_Spearman_out_melted' name='federated.0kkmfte0zkziqb16csknh0foqejv' />
          </datasources>
          <datasource-dependencies datasource='federated.0kkmfte0zkziqb16csknh0foqejv'>
            <column caption='Var1 (eff Spearman out coeff melted.csv)' datatype='string' name='[Var1 (eff_Spearman_out_coeff_melted.csv)]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Adeno_logGCpermLsample&quot;' value='Adenovirus' />
                <alias key='&quot;CrAss_logGCpermLsample&quot;' value='CrAssphage' />
                <alias key='&quot;Cumulative 3-day pre-sampling-day precip (mm)&quot;' value='Precipitation' />
                <alias key='&quot;log(BOD (mg/L))&quot;' value='BOD' />
                <alias key='&quot;log(cBOD (mg/L))&quot;' value='cBOD' />
                <alias key='&quot;log(COD (mg/L))&quot;' value='COD' />
                <alias key='&quot;log(E-coli (MPN/mL))&quot;' value='𝘌. 𝘤𝘰𝘭𝘪' />
                <alias key='&quot;log(Fecal (MPN/mL))&quot;' value='Fecal coliform' />
                <alias key='&quot;log(Filtered UVT_Grab (\%))&quot;' value='Grab filtered UVT' />
                <alias key='&quot;log(Grab Flow (MLD))&quot;' value='Grab flow' />
                <alias key='&quot;log(Grab Temp (C))&quot;' value='Grab temperature' />
                <alias key='&quot;log(Mean temp (K))&quot;' value='Mean temperature' />
                <alias key='&quot;log(NH4-N (mg/L))&quot;' value='NH4-N' />
                <alias key='&quot;log(NOx-N (mg/L))&quot;' value='NOx-N' />
                <alias key='&quot;log(PO4-P (mg/L))&quot;' value='PO4-P' />
                <alias key='&quot;log(Raw Flow (MLD))&quot;' value='Raw flow' />
                <alias key='&quot;log(sCOD (mg/L))&quot;' value='sCOD' />
                <alias key='&quot;log(TN (mg/L))&quot;' value='TN' />
                <alias key='&quot;log(TOC (mg/L))&quot;' value='TOC' />
                <alias key='&quot;log(TP (mg/L))&quot;' value='TP' />
                <alias key='&quot;log(TS (mg/L))&quot;' value='TS' />
                <alias key='&quot;log(TSS (mg/L))&quot;' value='TSS' />
                <alias key='&quot;log(Turbidity (NTU))&quot;' value='Turbidity' />
                <alias key='&quot;pH_Grab&quot;' value='Grab pH' />
                <alias key='&quot;PMMV_logGCpermLsample&quot;' value='PMMV' />
                <alias key='&quot;uidA_logGCpermLsample&quot;' value='𝘶𝘪𝘥𝘈' />
              </aliases>
            </column>
            <column caption='Parameters' datatype='string' name='[Var2 (eff_Spearman_out_coeff_melted.csv)]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Adeno_logGCpermLsample&quot;' value='Adenovirus' />
                <alias key='&quot;CrAss_logGCpermLsample&quot;' value='CrAssphage' />
                <alias key='&quot;Cumulative 3-day pre-sampling-day precip (mm)&quot;' value='Precipitation' />
                <alias key='&quot;log(BOD (mg/L))&quot;' value='BOD' />
                <alias key='&quot;log(cBOD (mg/L))&quot;' value='cBOD' />
                <alias key='&quot;log(COD (mg/L))&quot;' value='COD' />
                <alias key='&quot;log(E-coli (MPN/mL))&quot;' value='𝘌. 𝘤𝘰𝘭𝘪' />
                <alias key='&quot;log(Fecal (MPN/mL))&quot;' value='Fecal coliform' />
                <alias key='&quot;log(Filtered UVT_Grab (\%))&quot;' value='Grab filtered UVT' />
                <alias key='&quot;log(Grab Flow (MLD))&quot;' value='Grab flow' />
                <alias key='&quot;log(Grab Temp (C))&quot;' value='Grab temperature' />
                <alias key='&quot;log(Mean temp (K))&quot;' value='Mean temperature' />
                <alias key='&quot;log(NH4-N (mg/L))&quot;' value='NH4-N' />
                <alias key='&quot;log(NOx-N (mg/L))&quot;' value='NOx-N' />
                <alias key='&quot;log(PO4-P (mg/L))&quot;' value='PO4-P' />
                <alias key='&quot;log(Raw Flow (MLD))&quot;' value='Raw flow' />
                <alias key='&quot;log(sCOD (mg/L))&quot;' value='sCOD' />
                <alias key='&quot;log(TN (mg/L))&quot;' value='TN' />
                <alias key='&quot;log(TOC (mg/L))&quot;' value='TOC' />
                <alias key='&quot;log(TP (mg/L))&quot;' value='TP' />
                <alias key='&quot;log(TS (mg/L))&quot;' value='TS' />
                <alias key='&quot;log(TSS (mg/L))&quot;' value='TSS' />
                <alias key='&quot;log(Turbidity (NTU))&quot;' value='Turbidity' />
                <alias key='&quot;pH_Grab&quot;' value='Grab pH' />
                <alias key='&quot;PMMV_logGCpermLsample&quot;' value='PMMV' />
                <alias key='&quot;uidA_logGCpermLsample&quot;' value='𝘶𝘪𝘥𝘈' />
              </aliases>
            </column>
            <column-instance column='[Var1 (eff_Spearman_out_coeff_melted.csv)]' derivation='None' name='[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Var2 (eff_Spearman_out_coeff_melted.csv)]' derivation='None' name='[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[value (eff_Spearman_out_coeff_melted.csv)]' derivation='Sum' name='[sum:value (eff_Spearman_out_coeff_melted.csv):qk]' pivot='key' type='quantitative' />
            <column caption='value (eff Spearman out coeff melted.csv)' datatype='real' name='[value (eff_Spearman_out_coeff_melted.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;log(Grab Temp (C))&quot;</bucket>
              <bucket>&quot;pH_Grab&quot;</bucket>
              <bucket>&quot;log(Filtered UVT_Grab (\%))&quot;</bucket>
              <bucket>&quot;log(Grab Flow (MLD))&quot;</bucket>
              <bucket>&quot;log(Raw Flow (MLD))&quot;</bucket>
              <bucket>&quot;log(TSS (mg/L))&quot;</bucket>
              <bucket>&quot;log(Turbidity (NTU))&quot;</bucket>
              <bucket>&quot;log(Mean temp (K))&quot;</bucket>
              <bucket>&quot;Cumulative 3-day pre-sampling-day precip (mm)&quot;</bucket>
              <bucket>&quot;log(TN (mg/L))&quot;</bucket>
              <bucket>&quot;log(TP (mg/L))&quot;</bucket>
              <bucket>&quot;log(TS (mg/L))&quot;</bucket>
              <bucket>&quot;log(PO4-P (mg/L))&quot;</bucket>
              <bucket>&quot;log(NH4-N (mg/L))&quot;</bucket>
              <bucket>&quot;log(NOx-N (mg/L))&quot;</bucket>
              <bucket>&quot;log(COD (mg/L))&quot;</bucket>
              <bucket>&quot;log(sCOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(BOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(cBOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(TOC (mg/L))&quot;</bucket>
              <bucket>&quot;CrAss_logGCpermLsample&quot;</bucket>
              <bucket>&quot;Adeno_logGCpermLsample&quot;</bucket>
              <bucket>&quot;uidA_logGCpermLsample&quot;</bucket>
              <bucket>&quot;log(E-coli (MPN/mL))&quot;</bucket>
              <bucket>&quot;log(Fecal (MPN/mL))&quot;</bucket>
              <bucket>&quot;PMMV_logGCpermLsample&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;log(Grab Temp (C))&quot;</bucket>
              <bucket>&quot;pH_Grab&quot;</bucket>
              <bucket>&quot;log(Filtered UVT_Grab (\%))&quot;</bucket>
              <bucket>&quot;log(Grab Flow (MLD))&quot;</bucket>
              <bucket>&quot;log(Raw Flow (MLD))&quot;</bucket>
              <bucket>&quot;log(TSS (mg/L))&quot;</bucket>
              <bucket>&quot;log(Turbidity (NTU))&quot;</bucket>
              <bucket>&quot;log(Mean temp (K))&quot;</bucket>
              <bucket>&quot;Cumulative 3-day pre-sampling-day precip (mm)&quot;</bucket>
              <bucket>&quot;log(TN (mg/L))&quot;</bucket>
              <bucket>&quot;log(TP (mg/L))&quot;</bucket>
              <bucket>&quot;log(TS (mg/L))&quot;</bucket>
              <bucket>&quot;log(PO4-P (mg/L))&quot;</bucket>
              <bucket>&quot;log(NH4-N (mg/L))&quot;</bucket>
              <bucket>&quot;log(NOx-N (mg/L))&quot;</bucket>
              <bucket>&quot;log(COD (mg/L))&quot;</bucket>
              <bucket>&quot;log(sCOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(BOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(cBOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(TOC (mg/L))&quot;</bucket>
              <bucket>&quot;CrAss_logGCpermLsample&quot;</bucket>
              <bucket>&quot;Adeno_logGCpermLsample&quot;</bucket>
              <bucket>&quot;uidA_logGCpermLsample&quot;</bucket>
              <bucket>&quot;log(E-coli (MPN/mL))&quot;</bucket>
              <bucket>&quot;log(Fecal (MPN/mL))&quot;</bucket>
              <bucket>&quot;PMMV_logGCpermLsample&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]' value='25' />
            <format attr='height' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]' value='24' />
            <format attr='font-style' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]' value='152' />
            <format attr='width' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]' value='168' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Tableau Semibold' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]' value='-90' />
            <format attr='vertical-align' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]' value='bottom' />
            <format attr='font-size' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]' value='9' />
            <format attr='font-size' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]' value='9' />
            <format attr='font-style' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]' value='normal' />
            <format attr='font-weight' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[sum:value (eff_Spearman_out_coeff_melted.csv):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ffc20a</color>
                <color>#fbc41f</color>
                <color>#f8c735</color>
                <color>#f4ca49</color>
                <color>#f1cc5d</color>
                <color>#edce71</color>
                <color>#ead083</color>
                <color>#e6d296</color>
                <color>#e3d4a7</color>
                <color>#dfd6b8</color>
                <color>#dcd7c9</color>
                <color>#d9d9d9</color>
                <color>#c6d0d9</color>
                <color>#b4c8d9</color>
                <color>#a1bfd9</color>
                <color>#8fb7da</color>
                <color>#7caeda</color>
                <color>#69a6da</color>
                <color>#579dda</color>
                <color>#4494db</color>
                <color>#318cdb</color>
                <color>#1e83db</color>
                <color>#0c7bdc</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[sum:value (eff_Spearman_out_coeff_melted.csv):qk]' value='Spearman coefficient' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kkmfte0zkziqb16csknh0foqejv].[sum:value (eff_Spearman_out_coeff_melted.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.80160218477249146' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]</rows>
        <cols>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]</cols>
      </table>
      <simple-id uuid='{C6692C83-BC6F-45DF-A5D3-33A415FCFFE8}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <layout-options export-no-caption='true' export-no-title='true' export-orientation='landscape' export-smart-breaks='false' />
      <table>
        <view>
          <datasources>
            <datasource caption='eff_Spearman_out_melted' name='federated.0kkmfte0zkziqb16csknh0foqejv' />
          </datasources>
          <datasource-dependencies datasource='federated.0kkmfte0zkziqb16csknh0foqejv'>
            <column caption='Var1 (eff Spearman out coeff melted.csv)' datatype='string' name='[Var1 (eff_Spearman_out_coeff_melted.csv)]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Adeno_logGCpermLsample&quot;' value='Adenovirus' />
                <alias key='&quot;CrAss_logGCpermLsample&quot;' value='CrAssphage' />
                <alias key='&quot;Cumulative 3-day pre-sampling-day precip (mm)&quot;' value='Precipitation' />
                <alias key='&quot;log(BOD (mg/L))&quot;' value='BOD' />
                <alias key='&quot;log(cBOD (mg/L))&quot;' value='cBOD' />
                <alias key='&quot;log(COD (mg/L))&quot;' value='COD' />
                <alias key='&quot;log(E-coli (MPN/mL))&quot;' value='𝘌. 𝘤𝘰𝘭𝘪' />
                <alias key='&quot;log(Fecal (MPN/mL))&quot;' value='Fecal coliform' />
                <alias key='&quot;log(Filtered UVT_Grab (\%))&quot;' value='Grab filtered UVT' />
                <alias key='&quot;log(Grab Flow (MLD))&quot;' value='Grab flow' />
                <alias key='&quot;log(Grab Temp (C))&quot;' value='Grab temperature' />
                <alias key='&quot;log(Mean temp (K))&quot;' value='Mean temperature' />
                <alias key='&quot;log(NH4-N (mg/L))&quot;' value='NH4-N' />
                <alias key='&quot;log(NOx-N (mg/L))&quot;' value='NOx-N' />
                <alias key='&quot;log(PO4-P (mg/L))&quot;' value='PO4-P' />
                <alias key='&quot;log(Raw Flow (MLD))&quot;' value='Raw flow' />
                <alias key='&quot;log(sCOD (mg/L))&quot;' value='sCOD' />
                <alias key='&quot;log(TN (mg/L))&quot;' value='TN' />
                <alias key='&quot;log(TOC (mg/L))&quot;' value='TOC' />
                <alias key='&quot;log(TP (mg/L))&quot;' value='TP' />
                <alias key='&quot;log(TS (mg/L))&quot;' value='TS' />
                <alias key='&quot;log(TSS (mg/L))&quot;' value='TSS' />
                <alias key='&quot;log(Turbidity (NTU))&quot;' value='Turbidity' />
                <alias key='&quot;pH_Grab&quot;' value='Grab pH' />
                <alias key='&quot;PMMV_logGCpermLsample&quot;' value='PMMV' />
                <alias key='&quot;uidA_logGCpermLsample&quot;' value='𝘶𝘪𝘥𝘈' />
              </aliases>
            </column>
            <column caption='Parameters' datatype='string' name='[Var2 (eff_Spearman_out_coeff_melted.csv)]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Adeno_logGCpermLsample&quot;' value='Adenovirus' />
                <alias key='&quot;CrAss_logGCpermLsample&quot;' value='CrAssphage' />
                <alias key='&quot;Cumulative 3-day pre-sampling-day precip (mm)&quot;' value='Precipitation' />
                <alias key='&quot;log(BOD (mg/L))&quot;' value='BOD' />
                <alias key='&quot;log(cBOD (mg/L))&quot;' value='cBOD' />
                <alias key='&quot;log(COD (mg/L))&quot;' value='COD' />
                <alias key='&quot;log(E-coli (MPN/mL))&quot;' value='𝘌. 𝘤𝘰𝘭𝘪' />
                <alias key='&quot;log(Fecal (MPN/mL))&quot;' value='Fecal coliform' />
                <alias key='&quot;log(Filtered UVT_Grab (\%))&quot;' value='Grab filtered UVT' />
                <alias key='&quot;log(Grab Flow (MLD))&quot;' value='Grab flow' />
                <alias key='&quot;log(Grab Temp (C))&quot;' value='Grab temperature' />
                <alias key='&quot;log(Mean temp (K))&quot;' value='Mean temperature' />
                <alias key='&quot;log(NH4-N (mg/L))&quot;' value='NH4-N' />
                <alias key='&quot;log(NOx-N (mg/L))&quot;' value='NOx-N' />
                <alias key='&quot;log(PO4-P (mg/L))&quot;' value='PO4-P' />
                <alias key='&quot;log(Raw Flow (MLD))&quot;' value='Raw flow' />
                <alias key='&quot;log(sCOD (mg/L))&quot;' value='sCOD' />
                <alias key='&quot;log(TN (mg/L))&quot;' value='TN' />
                <alias key='&quot;log(TOC (mg/L))&quot;' value='TOC' />
                <alias key='&quot;log(TP (mg/L))&quot;' value='TP' />
                <alias key='&quot;log(TS (mg/L))&quot;' value='TS' />
                <alias key='&quot;log(TSS (mg/L))&quot;' value='TSS' />
                <alias key='&quot;log(Turbidity (NTU))&quot;' value='Turbidity' />
                <alias key='&quot;pH_Grab&quot;' value='Grab pH' />
                <alias key='&quot;PMMV_logGCpermLsample&quot;' value='PMMV' />
                <alias key='&quot;uidA_logGCpermLsample&quot;' value='𝘶𝘪𝘥𝘈' />
              </aliases>
            </column>
            <column-instance column='[Var1 (eff_Spearman_out_coeff_melted.csv)]' derivation='None' name='[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Var2 (eff_Spearman_out_coeff_melted.csv)]' derivation='None' name='[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[value (eff_Spearman_out_coeff_melted.csv)]' derivation='Sum' name='[sum:value (eff_Spearman_out_coeff_melted.csv):qk]' pivot='key' type='quantitative' />
            <column caption='value (eff Spearman out coeff melted.csv)' datatype='real' name='[value (eff_Spearman_out_coeff_melted.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;log(Grab Temp (C))&quot;</bucket>
              <bucket>&quot;pH_Grab&quot;</bucket>
              <bucket>&quot;log(Filtered UVT_Grab (\%))&quot;</bucket>
              <bucket>&quot;log(Grab Flow (MLD))&quot;</bucket>
              <bucket>&quot;log(Raw Flow (MLD))&quot;</bucket>
              <bucket>&quot;log(TSS (mg/L))&quot;</bucket>
              <bucket>&quot;log(Turbidity (NTU))&quot;</bucket>
              <bucket>&quot;log(Mean temp (K))&quot;</bucket>
              <bucket>&quot;Cumulative 3-day pre-sampling-day precip (mm)&quot;</bucket>
              <bucket>&quot;log(TN (mg/L))&quot;</bucket>
              <bucket>&quot;log(TP (mg/L))&quot;</bucket>
              <bucket>&quot;log(TS (mg/L))&quot;</bucket>
              <bucket>&quot;log(PO4-P (mg/L))&quot;</bucket>
              <bucket>&quot;log(NH4-N (mg/L))&quot;</bucket>
              <bucket>&quot;log(NOx-N (mg/L))&quot;</bucket>
              <bucket>&quot;log(COD (mg/L))&quot;</bucket>
              <bucket>&quot;log(sCOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(BOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(cBOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(TOC (mg/L))&quot;</bucket>
              <bucket>&quot;CrAss_logGCpermLsample&quot;</bucket>
              <bucket>&quot;Adeno_logGCpermLsample&quot;</bucket>
              <bucket>&quot;uidA_logGCpermLsample&quot;</bucket>
              <bucket>&quot;log(E-coli (MPN/mL))&quot;</bucket>
              <bucket>&quot;log(Fecal (MPN/mL))&quot;</bucket>
              <bucket>&quot;PMMV_logGCpermLsample&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;log(Grab Temp (C))&quot;</bucket>
              <bucket>&quot;pH_Grab&quot;</bucket>
              <bucket>&quot;log(Filtered UVT_Grab (\%))&quot;</bucket>
              <bucket>&quot;log(Grab Flow (MLD))&quot;</bucket>
              <bucket>&quot;log(Raw Flow (MLD))&quot;</bucket>
              <bucket>&quot;log(TSS (mg/L))&quot;</bucket>
              <bucket>&quot;log(Turbidity (NTU))&quot;</bucket>
              <bucket>&quot;log(Mean temp (K))&quot;</bucket>
              <bucket>&quot;Cumulative 3-day pre-sampling-day precip (mm)&quot;</bucket>
              <bucket>&quot;log(TN (mg/L))&quot;</bucket>
              <bucket>&quot;log(TP (mg/L))&quot;</bucket>
              <bucket>&quot;log(TS (mg/L))&quot;</bucket>
              <bucket>&quot;log(PO4-P (mg/L))&quot;</bucket>
              <bucket>&quot;log(NH4-N (mg/L))&quot;</bucket>
              <bucket>&quot;log(NOx-N (mg/L))&quot;</bucket>
              <bucket>&quot;log(COD (mg/L))&quot;</bucket>
              <bucket>&quot;log(sCOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(BOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(cBOD (mg/L))&quot;</bucket>
              <bucket>&quot;log(TOC (mg/L))&quot;</bucket>
              <bucket>&quot;CrAss_logGCpermLsample&quot;</bucket>
              <bucket>&quot;Adeno_logGCpermLsample&quot;</bucket>
              <bucket>&quot;uidA_logGCpermLsample&quot;</bucket>
              <bucket>&quot;log(E-coli (MPN/mL))&quot;</bucket>
              <bucket>&quot;log(Fecal (MPN/mL))&quot;</bucket>
              <bucket>&quot;PMMV_logGCpermLsample&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]' value='25' />
            <format attr='height' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]' value='24' />
            <format attr='font-style' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]' value='152' />
            <format attr='width' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]' value='168' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Tableau Semibold' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]' value='-90' />
            <format attr='vertical-align' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]' value='bottom' />
            <format attr='font-size' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]' value='9' />
            <format attr='font-size' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]' value='9' />
            <format attr='font-style' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]' value='normal' />
            <format attr='font-weight' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[sum:value (eff_Spearman_out_coeff_melted.csv):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ffc20a</color>
                <color>#fbc41f</color>
                <color>#f8c735</color>
                <color>#f4ca49</color>
                <color>#f1cc5d</color>
                <color>#edce71</color>
                <color>#ead083</color>
                <color>#e6d296</color>
                <color>#e3d4a7</color>
                <color>#dfd6b8</color>
                <color>#dcd7c9</color>
                <color>#d9d9d9</color>
                <color>#c6d0d9</color>
                <color>#b4c8d9</color>
                <color>#a1bfd9</color>
                <color>#8fb7da</color>
                <color>#7caeda</color>
                <color>#69a6da</color>
                <color>#579dda</color>
                <color>#4494db</color>
                <color>#318cdb</color>
                <color>#1e83db</color>
                <color>#0c7bdc</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0kkmfte0zkziqb16csknh0foqejv].[sum:value (eff_Spearman_out_coeff_melted.csv):qk]' value='Spearman coefficient'>
              <formatted-text>
                <run bold='true'>Spearman coefficient</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0kkmfte0zkziqb16csknh0foqejv].[sum:value (eff_Spearman_out_coeff_melted.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.80160218477249146' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]</rows>
        <cols>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]</cols>
      </table>
      <simple-id uuid='{8C28C563-D93C-45B5-A41C-0F978EAA18C8}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='172'>
            <card pane-specification-id='0' param='[federated.0kkmfte0zkziqb16csknh0foqejv].[sum:value (eff_Spearman_out_coeff_melted.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]</field>
            <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1:nk]</field>
            <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]</field>
            <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2:nk]</field>
            <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[sum:value (eff_Spearman_out_coeff_melted.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{89C67796-9127-462C-BB2F-3763D364148F}' />
    </window>
    <window class='worksheet' name='Sandbox'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='172'>
            <card pane-specification-id='0' param='[federated.0kkmfte0zkziqb16csknh0foqejv].[sum:value (eff_Spearman_out_coeff_melted.csv):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]</field>
            <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1:nk]</field>
            <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]</field>
            <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2:nk]</field>
            <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[sum:value (eff_Spearman_out_coeff_melted.csv):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E805E234-0985-47D6-A2E0-5CCBA9C261AF}' />
    </window>
    <window class='worksheet' maximized='true' name='P-values'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='172'>
            <card pane-specification-id='0' param='[federated.0kkmfte0zkziqb16csknh0foqejv].[sum:value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1:nk]</field>
                  <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2:nk]</field>
                  <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[sum:value:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;log(Turbidity (NTU))&quot;</value>
                <value>&quot;pH_Grab&quot;</value>
                <value>0.00178184</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1 (eff_Spearman_out_coeff_melted.csv):nk]</field>
            <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var1:nk]</field>
            <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2 (eff_Spearman_out_coeff_melted.csv):nk]</field>
            <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[none:Var2:nk]</field>
            <field>[federated.0kkmfte0zkziqb16csknh0foqejv].[sum:value:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FEC2298C-7AAD-443A-BBD8-5A67920620AF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='P-values' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sandbox' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29eXQd13ng+auqt+/Ae9hXYgfBfRVFWZIl2bLlLXZsdxYn407c6UzSmc7M
      yemZntMzyaRPetI93enJpHN6PFk63YljJ7YVW7YWS5ZEURLFDdxAkARA7Pvy8PDw9qWq5g9I
      Ah7vBQXaEilI9fuHxFfLvbde3br3fvdbFNM0TSwsPqSo97oCFhb3EqsDWHyosTqAxYcaqwNY
      fKixOoDFhxrbva7Ah4WpkesYjiBlkSr8Lu1eV8fiTbbtCGCaBquJBIVC4V5XZUtMjA0ydLWP
      m5PL97oqFhvYtiPAwKVehqJZaso8HDp48F5X5x0JVzaxkoW9bZF7XRWLDWzbEaC2oQ4zFcUd
      rNjS+YODQ+9xjW5P36XzzExPshBL39N6WJSybUeAuelxymt3UFkW2NL5w9cvMzExDoqd+z9y
      HI/j7jZ9R0sbs9HEXS3T4p3ZtiNAIBRhZX6SiZmFLZ0fCYcp6gaNLa247Xe/3ze2dNDVHGFp
      NXfXy7bYnG3bAdz+IE1NTSTiW1tUdu/eg9dp4/SrJ4hn8u9x7UTGRkfI6nZCPsddL9tic7bt
      FCg6P8vY+CSRmuYtnT87M0fPgSPc/6AHTb27/X41Osvl/hvU19ZQ2bLrrpZtcXu25whgFDlz
      5jyKZkPXi1u6pJjPcOHsaZ76/lPEM3dXdRoI13B4Txvx1TTFon5Xy7a4PduzA6g2nvj0E3gc
      NgKBrS2Ci4U82WwWVBuaqrzHFZRgs6PmVokmrDXA+4ltOwWaHJtCcXrIJla2dP7uQ/ez+z2u
      0+3IF218/itfRVNLd4Fz6SRzi1ECoTBlQd89qt2Hl23bAbw+J+5wBS7v1kaAvvOvcXVoBofD
      wcc+9WkCrrvbdD25xN/9/ZN89OOfpDa8/qL3XbqIwx/C4dlaOyzeXbbnFAhwOjROnTrN3PzS
      ls7ffeAwPpcDVTXQdeM9rp1INpuktame+VimRB4IeJkYHye2mrzrddpupJMJsrk876YP47bt
      ALquUFZZi8e2xZdZtRPwuti5Zx9O2903RqtvbmNiep62+rISebFQQFVVMpnMJldaAKCn+c43
      v8OlK5eJpUvV2JlMhoW5WfLFO/+wbdsOYHc4iC9MEEtvTQuEUWB2eorXXjtN7h5oYsbGpvC7
      dOZvMYVwOp04nQ6cTuddr9O2QnPT1dlAdCVFwG0vOXTx3BucO/UyfTdn7/i227YD6MU8wbJy
      HA77O58MgMre+z7CL/3Clynz3v3NKE1T0XWDs6dOUTDWxvCV+Ulmogni8dV3dVj/QKJnGJta
      ZGV2jKd+9AobH1fQ76F2x04aqss2u3pTtm0HWIlGyRcNzp86wdhMdAtXmNy40suPnn+JVK50
      1Oi7cJbBkUneywAZoVAIl6+Mxx59EPubathQZT2VlZV8+jOfxmZY6tHbojqIlAcJhKtoa6op
      ORQIRVDycWaXVu/8tu9W/e42Ld09NNXV8LFPfobm2vDWLjIV6htqyBdLX3SP18vA5dMMTpYu
      qCeHb9B7+RqFrS6a9Qznzl2Snh+LSdS1Ro7rV69y8uRrRKpqt1bGhxYFUy+QLxi0tbexcSdn
      cW6ayYUENRV3rknbth1ganQUVyCEz+Pa2gWKisdlo//6TRz20mYrRoG5uXnhxXW6PKzMj3H6
      Qv/WytDcBB0Z/vhP/pTXz10uGaYdbh/t7e34XBumbJqL9pYGZmcmGbw5urUyPqwYWVTVQTKZ
      FBa70eUYnd078f4EFr7btgMUCwXiKzGS6ey60DSIr6wQi8VYWU2UvIBGIUPzrvt4+Ohu8oXS
      RXAmk6Hn8IPsbK4skdtsCvOzc6SzW5yeFBPEjRC/+Wu/yp7u1pJDaiFB/7UbxNKlZhjuQJjW
      xjpczq2uZT6kqC6cLhtlZSGctvXXdml+HlVTOfXaSeZjd65K3rYdIFgeZHRoiMXohqmFaTA2
      PMTTTz/DyNhkSQdYmJ2m7/IFJhYSghZhOZ6h1m9waXC6VD4/TcZ0sLOz9GXejImha5w/38uz
      L7yM3eUpGaZRTZwKLERT6zI9x7kzZ1GcXtIZy1HmdizNT5E2XOzdvRO7tv5kXW4XdruTQ/cd
      p6rsznfSt20HWF1JEqisx2Zs1J+bLM7PEY/HmV8oXRjPzs6jKjpzM9NkbhkB6moquDm5REt9
      6QiwmtL5ws9+jtGhgS3VKa3bqAw6ARXlFnOjskgDvpCP6nL3+vnJBGXhMKlUhubGxi2V8WEl
      m80zNnCB7z/zYzbOgHyBIHv39PDCU99hfCF+x/fdtqYQZZEw5sQVzMoNL61q5/gD95Epgt1h
      v+ULbANdF7r8wOVznLlyA5/XSzyRIrRBRbrnwD56L/axb/+BLdUpnUzhcLtAs5WUvRqd5fWz
      F6ivrWHHBmccm8NNd8cOzl3sx+68u6rZpelRTl/sJ5OIUdt1lOP7OwAwinmmpmcxAbc3QGXk
      zlWL7wX1DbXs6DyAU8syOjFLV0vd2894bGycBx7/Gboa79zfenuOAEaRl158GdXhIpct3UHN
      pRLEU1mGr1/mQv+6H3Axu8pqFioiYbQNn2fNZqdQNKioqMC1YRG1PDvK33zzu0zNzHBzdGJL
      1TpweD8+fxWVITdFY30CFgjX8LWvfY1PPPEpKgPri3aH28vc7DzHjx/l5tDNO34MW2F+9AZP
      fv/79A2VtsHp8RIMBtnRvZ9j+9rflpumTmxpjh8//ywX+t+bOv1EKE7CITepnIFqlqqx44ks
      EUeayzfntnSrWCz2tsp7e44Aqo0v/Nwv4nC5uNWwOVTTwld+vkW45PBHPs7uozquW760bT37
      qG/twuUq1SZpmkY2l2dHRQU+j5utMDsXI708yrTu4cB9pd+WN068QDSZ49D9H6W63Lte36CX
      c+d6KRaLzK90URXybKmsrRKNLqMXC5x84Rnsts/StWNN3ZpJJojH46ysrDBSXkFbYxUAhcwK
      33vqOXYfOEB5aGtz6nwmwRunz1HR0MbOtneeyplGgVdPvEwmb7Bz/300VIXeuRAzy+zYOEtF
      hcPVNSW/e21NhJvTixw9vmdL9XWoJm+ceh13sGKbdgAgl4zy0ktXaN914O0fD0DPpzlx4hUC
      Vc0c3tu9foGicuX8qyR1Bw89cKzEJ2By+Do3p5Y4/uDDby+Qg5WNfPW/+wpOSSfbDI/HS3kk
      gs8WEobW6HIUHKUv1Mr8JHPLSfL5PO27Dr7rLz/AzkP3s/OgzszcErU168+psqGVT9c1cn1w
      ouT5uQI1/O7/8bsMDg7R0dEuu6XA+XO9HDr2EUavnmN+tYqqwO3NOqLT49R1Haa1Jsi58xdp
      qNpCWBvNR1NXJ00oghJjcnyCXFEhkcwIx2QMDlzHeHOE3pZTIL2Q5dLFflq6u5mZ2qA/Nw1u
      XuvDHW5gdXmBjdri6PwEKykFr5ZnObluTJVcjTE6tUhXU4Sb4/Ml5SxOj/HySy8zMlkq34xg
      wEmm6IZcnNwtewoN9dWkkpmSOoWqGgj4Anz+8z9DMXPnC7itYBg6hUKR1Xi8xAp2evg6Tz/3
      Y15/7WWGb2nfwtQYHr+fK/2li//rl8/x/PPP09t3i1JAz/GjZ35A//AUmOtlxObGeOqHz/D0
      D3/I7AYVpTcQ5Mrpl3nyH74Hzi1qbvQk4zcG6L06wOotHn2aTfIa61le/vGP+dFzP+LmeKmN
      0K6uFmLJLPl8fnt2AMPQ8fic/Oj732M1u/GICXYn/WdPMDpduqubzeqsLAxzqvcGdtv6N72Q
      z2EWknzv2ROCLj775nqixIHMzHPz5jgXTp/kxVfPlKhaL5zrJR5fYDWrY7/V73gTj7DaiIcn
      /+EfCEbq7vxBbIHx/vP80Z/+Ga++epLx2fVnUl5RhdftJFzdRGtDVck1qqLzgye/Q0bf0AYj
      RyLv4OMf/zhkE2zUo/n9flRVwe504dkwxRwZnqCyuoqqiiAjo+sqZlVVUd78twQjzfneawCc
      O3eu5GOB5qNr3246G6tx2kuteT0OhUhFDamNHUN1UhEOML8Uo76utH02TwiPXSGTSm/PDmB3
      enHZPew+dIRK/4Y5vaIRCfqI1LTT2dpQck1dfRUeVxm7errZsD6lLFJNWVmI/T27BD+BYHmE
      /OoCA6OT60JTp6/3DZbyLm4N8HDg8GF03WR3Tze3el3aTIPuQ/cTCZSuJyam5imvrGd5buxO
      H8OW2LH7KP/0K1+grXtPiZo3k05R1A1sZo7R6cX1C0yTsfFJauobqa3aaGKikVqe4sknn2R2
      OVkyLUylc+w7eITKoItsfn2B2r1nD8VkjGTBzp7Oprfl+WyaYGU9B/ftIpPasC+iutHTMzz9
      9DPomrvk5Xzpme9zte8Sixk7nlt28h0uN9f7+3Fu2GUv5lLkTDuf/fTjzEzPlJyfX5mlquMg
      LU0127MDwJpHWGNdLXVNzSVyl8dNa8cOKiurShun2Kltaaa2upKgp/RLb/eEqG+qo6WhNMpc
      NpvG7vETDvjXhaqTYw89QnuVGxy+0vWBaTA7dpNv/t33yBmlnSm2NMdrJ19jNVU6AtQ31JJY
      mqJ8Y3QLPcNzP/whf/Vnf8r/+zff21gAF954hedeek14HvNzcxSzCZ5++lkyG2ydlmdGeem1
      s8SXprkxuj4VCFXWcnh3Cy3dh2msWX/R0yszaIFmPvfZTzExPLjh+amoioKiKCiaWtLurt27
      SSwvUNPcUaJGnhkbxllWTZmzWGKw6I/UEbQXuDYwzM6dXRuap5NYTZPP51i9ZSd//+EjuN1e
      0vFFshs2AiZvXqN/eJ5ImZfCBjN3m8uH00zTd7Wf8alS7ZAz0kx2up/Zpfj27QCbeYRpdieX
      z59manqWW03SxoeuMzI2STZ/iylEbJZL14ZYjpdupSfTOn6Pk0Riw/xcT3G9f5AbE0uoxUzJ
      j4Tm4vNf/jL3H+ph44G5yVG0QB3dPZ1UBEu1TROjIzS276LMu2HhaBrMTE3irdzBxx44tEFu
      MruwTHJ+ijOXrpa0b3T4JideeoUDe9sYnlrfHU8lEjS0dbO7q4Vkcr19S9NjPH/iNBfPnuDm
      xPoawBWoIDrZxzPPPEcwstHqUqdgahw9ehRVL5S0+8b1IXr27MeWX2E+vj4n9fq8TI+PMjGz
      iNe7PvItz4yynMiSKij0X72yoX06uuri6NEjmMWSuS1l5WWsJvMcOrC7ZCe4oW0ndZEALred
      bG7DFKiYp6qxDdPQqYiUU4rKoWMPcGjvzu3ZAfLpOJq/ipryAOrGuYaps7iSY2dbE4qqljRu
      cnqevXt3oWilc8/56Sk6evbi0hRUbV0pZhZzzC/M0b3nAGWhDVaGiouqqiDHjx+ntbWldMNr
      dZVEIkFNYwvuDV5nuWwGwzBx2B3YNHVDGVlGRsdZWYmTzZcu7I5+5FGO7OvBU6KCVejs6ubw
      /ceoDpduULW2NNHSc4CAL0x7w7pasaa5hSuvPc9C1snB3etaHVVVcXsDOJU8S7H1kI16PkNB
      V9ALOW4MbtgHUGzs2d3N3Nw8u/bsLnm2OzuaeO7ZZ5iMm9Rt2On2+v34AmW4nA783vWOr9nt
      RJcWScYW0dk4Gmvs2bOTuflFjh8/Xvpsk2l6ujuYn53hVn+mPfsPYJg2yv0bPi6qRjGbAlTc
      t6i44/G1D9rQ4ND27ADZ5AqLsRR7Dx8lsxpbP2AWmJxeoKmjB7eql3whpyenCIRraa8Lk9yw
      WJqfnUHX3Nx/ZDfzC+v3mhm9Sdu++3j1hR/R0rrBFqiY4PyF65w9dZKBkamSL+GJF55nenaO
      ifEJChumQHaHAxMwMUvWGSP913j0i1/BbVepqSgrKePMuSsMDQ0xObNRQ2Ny5VIvQ0ND3Bwe
      Lym77/JlRoau8cb5i6Q2RL4bunqdn/3qr6DphZIXarONMNXmoKwsRLiqnic+9tD6BUaB4fFF
      DhzYz/TYcMkiOFAeoSpczkj/ReZX1r/c4+PztNb4ad65h4mJ9Xl4sLKRvTu7+dIv/Dxlvg0d
      QE/x0suvsxxd4vKV/pL2XesfoKO7h6BbKzFluXDyWf7q289g94epjWz4UKkafr8fTTFYWCw1
      izl/5gxnz/WCoqD93u/93u+xzXB6gkwMXmZweIxd+w/hc78571RsFJMLXOq7Ts2OjpLAuX6X
      whtnezGcITo3bKOHwyHOnHqd6WiG+w7uent/QFUMXnvlFTSHE0NzUVP55jBq6gQjDRzYv4uG
      2qpbXiofBw4coGVHU8k+w+LsJJMz82QyGarqmt6ur6oUOfHyCRKrcYqah6rwm19uo0hZdQsH
      9u2krrp0XeL2BdfKaG4o+XopNseavKUF90azYCPHK6+8zmp8GcUVJFK2tp6JL80xMj5FcnUF
      zR2i/M2QLHouxdVrA2QyaVIFc718RcPIRHn9dC9VjW1UlQc3FK4wMTJE9979hMrL37bWLGbj
      nO8bZGFmhh3tnZQF1vc5HJrBqVNvUN3Q+nbZmAaBcB0H9u+msb50s8tjNzhx8hSqN0xb4/qx
      mqZ2drbWMTM5gStYid+zPpXMpZPMLkQJlIWp2jANqoyEmJ+bJZ42UMw1SuaH71eWUjq/9C35
      dvfXD/4llU7RIyjtOEhB27qhWUa307dSLT32qPPfYVeygtxQvJiKuAEzVjjIUOG4IPfbMvQE
      pqRlKMhNr6P6DvJ4BXksC3HJJat5GF4Rt/Acqs7XOq4J8qKhcW6lW5AD+J2gbXU3EAhqK9Q6
      xfaZ2MlrzdJrHPooCqJ/959fb6R3SdwpfrziNF9t+KEgn8nV8J+mfkNaxr/ofgG7Wjp/sgEo
      ioLf7wdMZifHyJhOWho3eCiZJtHlGOHwrYuJu0vCKHJ5Sb7Tp+lTeBFdIw2lFUWTv9AycgYk
      dfkGucccxklKkOtKABPJ7qfRKr2XTVVwaPIoEIqZke88G2BKNu5zJiQlPv6xPEylxDs5VXCq
      YhsUbJu2226AbK9pMwwMaRkGDoxNepLDTKMihqycSZn0L4v1OuiJ4zNFK11NzzOakLfDQRSX
      UtrJSs5cmbzOwLzGwc4IgwPXSGV0bEYGe6CC3jdO0rXnEPt7Wvj61/8LP/P5zzI2Ok59fS2j
      U3M4bTZ8wTIy8QVwBqj025lfzRN0a6QzBTTy2HzlvPrCczz2scdwBitIxhaJLc4SrKghFo2x
      5+AhfM5ta51hsQ0p6deZxAoer5u/++5T9Pf1093dzNxinGt9VwlFqonOTaHaXDTuaGZ24BKr
      hsrc6ACKp4JMMcvC1CgLy0mis+OcPHWK1EqcvmvXaOtoZmFphevXB6lr2oHXSDK9sMzgwCCz
      KzmmBvoomgXiCSs2jsXdpeRzW919lJmzZ9m7dy9BrxOn3YHP56Gqrp58KobdFwEUWhtrCJRF
      SI1OUt3UhuEqxyzYMQt5Xnv1NXYdPEZrcyOrOZXquko8Tider5eK2jAuJUfBG6I4McOOtnbc
      Hg9hj8q14Zn1xayFxV2ipAMoisbBo8dKTjh2XFzEde3aD0Bt3UZzg/K1VXwoLF0r3Hf//SV/
      19eXLkzvr6y/o4pbWLwbKOZ7GQznXcbIL5G99IvSY4de+H0mM6JHUK3PJChZn+4ImhyoEuW3
      I+g0BRsfgOdHFSYS4oGOMpPdkhx+yxl4fVq+GPz2wz+QlvHs/DHm81sM/wJUeUzul9nXmQWC
      uecFcU63882Zx6X3+qXgvyRsm5Eek5HXGkk7jwpyxczhKooaKICMrQcUcQbgyl/Gboiav1Or
      D/LD5S8J8mrnEr/W+D1BDpB0HAOl1JDulrW9yezkKCMTtzTWNIlGxVRE0WgU09BZXo4Jxyws
      tgMlHWBNC5SnoszP4MA1Ll7qo+/CWW4Mj/HcMz+g93I/mDpnT79O7+V+zpw+jVHMc7b3wr2q
      v4XFT8Uda4EwDRZjKeanxylmkly4eJGclfXHYpvyE2iBYGlukr2HH8DrUGht3UHZ2KT05hYW
      73fuXAtkGnz6s58v0fS0tYpO6BYW24E733ZV1HtmEmEoXpZ8/0x6bEfYjy8jKrSmEzCTFNUq
      NV6T7rB4/mIavn5Zvu//Nw+fxmcX7VW8SjdTGVFDM7AM3x0Uy1YA+yamBaH0d1AVsV6vj7dz
      ObH1uDc+O5yQDMwuVeeP274tyFeLXr47+Anpvb7UM4DTPbLlsm3FCRy6JJSMWcCuj0uvcWo3
      QBFfx1XnYyRdjwjyNl8Vv9EoPifFdJMuyp3sw6k/E+yNfiItUHRuivHxCeLxFRJbSDkajUbf
      /reYTTE7N0c6V2RpaYEbVy/Te/ESuZ8gu4eFxU/LndsC7W7n29/5HkcO7iK+5GQ6lmB6Ns/j
      D3UzPRcnGPSQy2Sxo6P6wpCJcar3Gr/61V/k9JnTPLCriUtDS3iDlaQWJji+v4nLs46SgKcW
      FneLO7cFUh00tOzAr+kUTJVgWRk7Wndw+vU3KKTjXLrST8uORs5c6CMeXWB0epmaijVzVgUF
      QzcIVjeTnOnHW7Z1K00Li/eCn0gL1N7eTrnHhldxYDq8TA3dpPXIQRbjOXZV1eEPhNi3qxNv
      uAqvQ2U1t+Y8sauzhetzcQ4c2sVIbp6Kti6cSoLGmruftM7CAn5CW6CO9o6Sv+sihwFo3iA7
      cOSt+6yHw2hs7aLxTe/CnQfe2ip30bQh6IKFxd1kW9kCFQsZZoZ+LD321GQLqaJoS7KZLdCL
      4wp/2SeuOyJuk1/fJ38k99IWaDN6VzrpS4ghDGvcKR6qnhYvMHVc+rAgvp0t0Cfrxgg68tJj
      MlRjFYfEfsdExVDlaYxUI46C+NyzWgdFTXyIS1kH02kxlGSuCFMSrR/A55qWBMeen1gLNDk5
      RW6LGUotLN6v/MRaoH1djeQ0N/Mj16mursTp8RJbLeC2m7S17rhX7bGwuCN+Yi1QOODl0htn
      6di/lxvX+nj+6ReYnb7BXFT0BbWweL/yU2mBHmwJMnjxMkce+gQ3r12lImCnrKnznjTEwuIn
      4afWAlU+8AAAFcdEBwgLi/c720oLlMoW+Mbr8ny68RwYprj6PzeLVEOzmUfY7WyB+j/1bwk5
      xLhAfcUvEzU7BPkPbip864Z4L4/NpH2T1Fsn9++T2gL9m5m/YDAn2rhcXVIYWBbb57WbNEoU
      Lh41yYkD4kctVgjQKAm6C/DaQ/8LXX6JRmkTVGMZuy4aIpkomIo8CYhipqVaoDf4QyYVUTtV
      Zx+l3XVVkK8UAry08pAgB/jHzseEuE4lv46eS9Hb20vsNtEZUvEoExOTxFNbzJ1rYfE+pmQK
      lIuOsaqUcfLlH7Onu42lZJGQz0UqmSQc9BNpauU73/42xw/v48pyDkd6noqaakycJBIxfB43
      bW1t96otFhZ3jDA+X3jtOTwVzczOznKtv5/xsVEWR/r58aVhXJpCRU0DDdVh5oYu4ajp4Eb/
      Da6eeZ7rw7NMTm8tS5+FxfuFkhHA7q/gC1/6eVbmxtCcPto7gjRV+Cg4egjNLqGwpgHSvOUc
      Pv4g82OD9Bw4wtLETSprKtAd74+cshYWW+WWDlDJDj9QI77IzXVrMTbaO9YWe80+aK5dS7nT
      VCvZ77ew2AZsKy2QmZuncOGT0mPfyfw/JM1KQb4vMEi9e1GQj6er6EuI65WAusgTga9Ly9j5
      w39BvCDmDD5cbVAlBm7m4xWn+NmaFwV5Xq1n2ftVaRm/+zogCY/7Oy3/lXbf1hJ2A2j6Iu58
      ryDP6B6+NvKCIPdoGf5jz7+X3uuZ1X/KqrH1j9xcCq5HxTZoClRLnhPAbIqS3G1v8WsNf8vh
      4BVB/t3p+/nj4c8J8lbfCn963yvSMj7z0qfI3hIAuNQUYmmO4fFpItX16Kko/ooGzEyMZNFO
      S2MNFhYfNEoWwaFINXNz81S7klyZSONUDU68do5IaJNua2GxzZHu+DjKW9hVa+P18308fPwg
      z75w4i5Xy8Li7iB0gPb2dgrpFZYSeVp3NDIzO0d7u6Xbt/hgIsSh6OhYc6647+iRNUHL1tML
      WVhsN7ZVOhZT0aTeQQDfumFjLifO6A5Vd9IUEC1UR1bg4oKoqYi4K/Hs+1fSMh5ppiT741uc
      nVU4NyfzQrqfcOSYIJ1OwDdOyu2N/vqxgU08wo4RQ7zXbDbMQl6M0xRUF+gKnBPkJip/eHRQ
      kBdNlRMJebuPlr2CR916Djm90k+hTaI0MXXsppjGCqCghIXIzQDefAFDF31mQ26nNK5TjcdJ
      xi7PdfYfPwrmLdmjS4PjLs3R29vL+PR8yUnp1RjpvIFp5FlaWkvCHI1GWVwU1YsWFtuJkhEg
      FKlm7swF9nfv4ObkIkYmRjI6x8LsFIVgE3t3NjMzucTU2AB9Nydobajl2R9+j2PHj2PzRNCz
      CdraWjcry8LifYd0CmRmYtycylNcHiGdzrK/qRKjYRfXrpykWDRwOKsoD3iIrcQJV9XS1tbO
      0089SVn9LqzlssV2QugA7e3tqMFa/MZF/E0tuJ12wl47N8b62XfoARKxOPHoDKajkaDXhd+p
      MDoTRTMVdu+Rz70sLN6vbKoFOn68NKfX/bVr8X2qw2XQ1lxyzDAKOI8+SMBhhTe02F5sK1sg
      yyPM8gh7i/fMI2x8eh49l2R0clZ6EwuLDxKCR9jfP3udT++v5/TwDPl4C3mbD5+WJ5oycKlF
      EsksB+87yrf+65/zkceeYGV+En+kjqWZMQzFjs3hxmc3WE3laN3RyODoBHWVYabnV6mq8rIc
      zzN55RydDz6KCwWjmKeQiaNrbrKJOHWt3dRVWn4FFncHYXyOeOxMZ1X8ms6p02eIr6wwOzvH
      tatXGZ+cQUsvEy8ohKtqqfXk6L0+w8ryErFEnkw2RWplibHJGao8Bf7bd59FMQoMXrtCqKGV
      pdk5+q5dJVxRQ2NtmJsjEwwNDXF9cJgQq4xF08RiK/fiOVh8SBE8wh55KERsJUttuZ9iJoHm
      LUNPGbR3hAiH/Hht4NHgQE8nkyknu1srKA9HCAaCaBooJlzuPcNcppJf/tmPMVrpIDQAAB05
      SURBVDQ2T2vnTsIRH1NRH53tHXTWh5mdiRH22VDCDQR8Tmqb6qiLXaQsJI8daWHxXiB4hDX5
      oUlIsCxubnmb1jT+bY1iNuZAMEg4vJYyqKJ63ZYotO/Q2/+vAMHO6PhHHriDqltY/PS8J7ZA
      b7387zYurcAT1fKcxL/12m4Ws5Iw0IBMOzudUJhOyMvZWyFXjEUDv0PWLsr/tlfhssSuaLN7
      pQpweVF+ftZxUGoLdLDWR7NEYRdwgEuSXqExYPLpVvF8GwpZxyFBXlQ9m7bbabNhKpKGb4Ku
      VaFrEhWbaaAgD6dj4gJFbHirM0GDXfQIixXDXC1+RpCrCuwXHQMBSOg/h3q7HGFrcYEusJIU
      VX0AK9FF8m/aEhnFLEsx+Rtk2QhZbBckcYFCvPLi89RGfHjDtcSiy3R2dzJ0YxCbqeMOR0mt
      xmloqmWof5z+wRt8/rNPMDI6SsRt8Ppons4aN0Y2wc3pJeoiARZjCepauqgNW5kwLN5fCJOD
      4cFrdO/ay9jsMovD1zFUk9ef/xENu49iZlYZHx6hsbOFSxcukSuo7Nixg+TKApnlaRYzCjta
      dhCPxbjQN0BLmcKLr56hPBJiaNjaV7B4/yFogR59qI7m6gCKWaA27OfitVGOPfIIw1fPEalv
      JTk2wJXLQxy5/zjxpQyrsSlUmwt/RT31LZ1MjY5T295OyG3j5vQSjz10DH+oHE1M3mJhcc+R
      xwUC2t8McfjA8bXFTGXlWkbHqqoIrmAYhwqRIMCaFugtPVFd5foCuKphPYN8ubW3ZfE+ZFvZ
      AumFFPMDfy89phqrKIjeWp7cGWnW8pythYxDtK3R9HkiyT+RlvG1kZOkDHGf4pc7ptlZJiYG
      CWS+T1n6G4LcULzkN/FaqvzBX2BK4gJ99yPf4GhkSpA785dwFfsFua74KdpaBHmi4GLHj/5M
      kIdscSYf/Yi0Tv/o6pOMZrfu5xHPwYwkT5eCiWcTZVK6gLTd/+H+MT7ZFBfkN+Jhzi/XCvJy
      e5LP1F6UlnH8+8fJ6KUqM2lcoHBVNZqhEPQ73/7aW1h8EJHGBWqscfF3f/MkV86dYWXryQEt
      LLYdm37b9+/r5uLl63ezLhYWdx2pR5iiuGnd2UPAr+HdVnEjLCzujE09wpqbPTQ3V9/1CllY
      3E22lRYoly9w/prcI+zcHOT0rXuEfaJ2nN/sFm1M5jM+/mjgYWkZf9j1f+HRRDORpOMBCppo
      FPjabBkvTItxjIJOk6ObxBp+wvPvZSYxfOHkL3A22iDIe8IGXRLTq0QeJiXt9mg5vn/8jwV5
      Snfxv974LWmdfrfpX1LrnJEek6ErIQq2evGAWcBuyO9TUOtAEacbq87HyNvEUAuasYzdWJCU
      YaAgX7gGM99BQS+RbaoFis/PUdPSQWWZZb5g8cFlUy3Q7GKeUydfvlf1srC4K2yqBZocHaKt
      q+du1sXC4q6zqRboox97hLY2yTzOwuIDxKZaoLY2efgKC4sPEttKy180oF8eXJiCaAZ0WwZS
      jfzVpBj6fTEN3x2Uzwx/v33NH/pWRtO1RM12QX5iVpHey2Mz6d0ko+zP7f9baVygR2sfoSEs
      apquLil8d3DrcYEwCwRl9kmFAN8d/OfSOv2PNQq1cmc7KXZ9BE9ezNN1u7hAbvN1aVyga+nd
      TCr7BHmdfZF2l2hif/u4QL8nxAV6xxxhFZYWyOIDzG1zhMl8TS0sPkjcNkfYa+cu3+36WFjc
      VW6fI6yl6V7UycLirvHOOcIsLD7AbCstUE5XeHlCHk/ntw+alLlELYKmgG9JPP9gZIXPNou2
      JJNJByendkjLCORexKeLoWB2un3k7UOCfCrQyuXwTkFe4zX5R11yE6y8fY/UFmg04eOaxLZH
      VZDmykrm5dnafTYbOfteQV5UvNL7ACjONrL2rfu0qkYMQxXzlpkoGKpvk2uSUi3Q8HIZ/VlJ
      1nnfLHtVMZp13qjF75BrgWRvzqZxgVaj8wyNrbngxRZnWV5NAzB+8waDI2LoawuL7Yg8LtCP
      nwXVwc46H/2Kg+mzP4Km+/n4kQ6uDg5T6TSYrqilzm+piSy2N/K4QLv3YrM7KA/56O89Q87u
      ZXFuiv6BYZKxRYq+Wqp91stvsf2RxgXaURNEzacYjBb44uc/g5mOMrYCrXVh7KpOR7uYDcXC
      YjuyaVygtu7d6xkfvWFavWv/tV5+iw8SirkGmUzmXtflHTGKaVYnfiA9ZsUFKsWKCyQiiwtU
      sgbIx2d58Y3L9PVf5WZfPxnToP9qP3ouwVNPvwjA8tQAZ/tG6L/aJ2+JhcU2omQKlF+d45XT
      V2ipdVKtFxmMLTE1NM7c5AiLy2sjRHxulDM3ClTakvTs2n1PKm1h8W4haIGOHd3DqdOXQXFy
      7CMPUOa1UygWmRoZ5MqVKywnshzqaebc1bF7UF0Li3eXkhHAXdHGfWUO2qt+lXJfAB8qDz3y
      KJWVlRw4cpzKqkoyiXoMR5BKv/te1dnC4l3j7Q6gqiqqJ0gYCAfWNT3V1Wuxgapr1v71BiMA
      +DvuvjbIUGxE8/IkeoZuA0mEl3xqB3pedMLQnLU4PGI8Eb2ocn1ZTCEE0OSeociyILcpKsmi
      +EFYTDeQkdxLUd3YXaIzDsAD5edlzSBR9DCUEsOiFDI5ilmxbEX1YHOIsVdyho0Hys4JcreW
      49VN2z1L0LH1GJnpfJGoXUyFpCjg1OTORjndkLbbq3mJF7yCXFMMqp2ijYtHK7CUD0rLOBK6
      TL40Ksr2igtkZYq3MsW/xXuSKb6QWOCNizcYHBokm1zm1KnXmZgt9UG8cu4UsVSeoZsj0kIs
      LLYTJWuAQmKRsxdv0FjpYmxoiIc/8QTPP/M00+UhbA4Phw8dYHE5xuqlXlYTKdrbRD2zhcV2
      Qhif9+/r4sKl63hdGiurCUzFRiEZZTVrcq2/H2weXGaGTHHbzJwsLDalZARwhpvZG7LTFPHT
      2FDHjf5rPPrYY2SSq5imQSQSoaa2loDHQXXs/b9zbGHxTpR0AM3pJQgEG9c0FN1vbnR5nOvO
      DWVla6u3+mpxZf6eo4B9k1h2NbZhFLMgyFOeHJFbkiMDVHrLqHSJWhInBY6H5TFLVoxa8kVd
      kGtKEb8ixmtp9WQ4Hk6LZWhQv0mwjQuJg1KHmDL7Mh2qmK/BHlCISC5w2TQiXjGWiUPJ0ZsQ
      tT0Z3cXxsDwfxECijmh+69FB7CTwKKKGwTQVsoY8vopLzaFIFv9LrnKKEretIi6KqkSLp3nR
      5D5T9KX2ot0SOHdbaYEyuQLPXZBrgR7md/AoolrMVpxAM2OCPOF8jGXfr4nn64tEUv+ftIxv
      pv6UPGLHPxo4R7VT9C5zFm7gLogmIyaKNBIywEOn/lxqE/MnPX/AvsCA9BoZuuKjYGsW5Kmi
      g5859duC3K8leebIb0jvdfzE/8lAcutRAgMOkzpJfykaMJOUX1PrA5vk4/ZYk0FrSJTXeKFN
      oklLFeDaJrGj/ttVheItmsKSX8E0dS6dP095bTPp5RkSBY3OuiAXB6fZ0dpBU21EfmcLi21K
      SZ+bv3EWI9xGQ8TG2FyWCMucuXydsqYerlw4fa/qaGHxnlHSAZy+AInlZbJ5g2I+TSyRIeB1
      YOh5DNNKFWnxwaNkClRWv5N2fZhE3sH9h7pIFDSqQy6uDY7x8cfF3TgLi+1O6UpMUahrfssP
      bM0uCODAATE4qYXFBwFrXmPxoUaqizP1POfPX6C2uZ3lmREKNh91fpXBmRitHd3URuTWdhYW
      242SEWB58gYvvnqGc6++TLh9P2EtxnzOj7k0yuUbgzT3HOHCabnFoIXFdqSkA9g9IYorU6QN
      jVg0Rt7QyKdXSWSLeBwqxXwaU3Pcq7paWLzrlHqE+fxUN3bQs3sXUyMDFFwNHOxUKGgthJwm
      g+OjPP7xx+5VXS0s3nVKOoDN6WXv3jX7n+a2rjVhYH3r/0CZmPT5bqIoJn5NDJEBYFBGUWJC
      oKhxFEPmzaShmqKdjmKmUQz5fn08Z5KVGI7k/E4MRe4iKruXotgwFLltTbqAJLgL6LgwFNEM
      QzGSqKYYkkVVFVRDIjeLpESTKWymvK4ALpuBx7Z1ixlNRVqGcZtbZIprgX6FstUcZXbRlkvF
      xmJatCvSDZ2QTd6OdDEkpNLaVtGh7UqBnR7RCwigYBygKI0L5MaUxAUyVQ8OXYyzo+nzOPRh
      aRl9iyYpQ/yV9oQiVPnEDuDigvRehuIlr8rjAo2vKlJboKRZQ94mGuI585ekZeiGX+phlSu4
      mFgV7x+yGZu2u86bJ38HkTDjOaRl3C4u0HRCHheo2rHA4XJ5XKCTU7K4QFk+UysP2TO1KsYF
      usUhZoFXegepqqqm3A3js4vsPXCI3lMnCFY2sbfHigpn8cFC8Agbm42Ry+eZKGR4/JFjPP/K
      KRTTwD4zQLS1g7DrXlXVwuLdR9gIa+3cRTa5gqnrrK5EcfvXbE6TWR3ntpowWVi8M4JHWGD2
      BjsfepSQS2Focp6H79vFtSsFIvXt+KwOYPEBQ/AIO3hwPfTGrq61uBo9e8VwHPcCEwVdkafY
      sZlzUo8wxUyjmKL7pmIWMaU6ABvmJhYiDg0KEk2FRhHFlGmaDOm9TFQwxQUtgKaYUi2QQh7F
      FEOyKJuUARom4srVVDRp2BVNZdN253XIioqYTSkaSMtQAH2ThOaqAqZk0W4oLooSjz5Vc+CW
      aKacNhV9Ew2bqiB4i22zb7qNnCZmZAfw5V5BM1cFuV2fwKbPCPK8Vi/NV2WYKcxNVJphF3gk
      qjy3msJmrghy1SxI72ViR0EeaMplM6XaELu5jM2YF+SKmZOWYShuDFWMwWOoLtySX92psWm7
      o1mVBVFjfFtkZRgmZIpyf0W3zZSqQQtqBUlVVL87HEjjHrk0Jzl71yZlqIK7qbQDTA/fYHwp
      TnXdDgrxWVYyJnvba3j94iDNO1ppbRLVTxYW25GSDpBYGOfc9WnU1CJZb5jCxACpVZO9DTbO
      XLqBo7yF61cuWB3A4gNDyaRvdmyEus5dODUbe/btYXlphWIhy3I8RcjvwjSK6LfbzrOw2GaU
      jADthx9i8Pp12g8cYvzmTR772OMUk1FiGZPGygCXrw1y4OOWZ5jFB4eSDqAoKp07ewCIVLwZ
      18Vdw1vRJw4eOHA36ybBRDXFRNXAm7Y4oorBVDxSOx0TDUyJasMsbqqhyemQkwyAOhoG4h7/
      ZtoeRdlMcwO6qUijJBs4MBBtX0xlszJ0afsUU5dqYgyTTdvtUE2cd2AKUTQQojADmMi1Q2+V
      L2u3Sg6bpB2GYSNdEJ+HYhqohqgMAdBNl9D2baUFUiji0m9KjxW0emmOMJu+LM0Qbqo+NFM0
      mlLNJCqiuhFgOQspycuTMXzoEhWGqdil9zLQQJEHiMoW5bZARaUcXRNVMTZ9TlqGadrRJOpf
      1TDJ6uL9swqbtjvsNpGY9mzKu5kjzK4v4DNFW6CpXJjJhMwWKIdrk/hJ2WLk9rZAK0tznL1w
      hc6evawuTFDQfOzrbuZc72Wa2rqojkgiFFlYbGNKxuFQpJpCoUi1K8lc1gfLozzz3Aka9xyy
      Xn6LDyTSiajm8K55gmWKVIW9LEdXyGTlw6OFxXZGWAPcd99RbP5yDnXlKGit1FWFGR26Qa7o
      xcoKZvFBQ+gA4fBaNKCquqa3ZS0dcueNu03eUOldlEekOBCYwqmJ5gWG4qGgiYulolqBroh7
      6bpisIDc9qnFM0nOFD8DQXUZmy6OkFnTJ72XqjhxanLvusOVSeli0O0so6CKK/C8mmEV0Ua9
      YHhJ5sTo1xndweFKcfHv03Kbtrvc4yKrbX3/J+IqUucRfwsFBc0m/4wWixmQ2ALFcjbOzoue
      cAUjR51jTJDbFJ3Ly/J3ZG84RtEonfRsq+jQs6tFjvzxmPTYix/536n3iAnsUo5j5G07BHlR
      CVHUqgV5pqhybUWeiO9jjt/HroiaFUNxS6M9jxTuY7D4iCD3ayl2B+TeV2svv9gBCmo1piK+
      6NMpB3MZMVBBPAcjcYlWRdX5J+3XBHnR0DgXl3/oUnm5m+Zm1Lhi7A6KOcV07CTUTuk1AeMG
      qsTo7X96vYnnJsT15z9uOcMf7HlGkA8mqvnq+V+XlvHUoy/gvsWrrqQ7mKbOxXNnGJ+ef0vA
      Ky+fkFTrTQydwZvyH9LCYjtQ8tlaiw7dQUO1nb//629x34OHmR0b4spwF9Ghi3Tt6qa/b4jd
      nXWcG5ilOlzG8OA1Rsen6N5RQ//IDE0RLzOzc5TVtpCMzdO2+wh1YbkJs4XFvUYaHTqTSeAL
      N7I8OUK4pYPRa5fwupyMjs/gcpqMDo/gLqtiaX6GUKSKYjbF1at9DA3fZHRyjrBXo+/SRbI4
      0O5o8LSwuLtIo0Mnsy7uu28XUGRfeRlLS0ssL8wRqWtmbmKEyoDG909P8OXPPEY+mwbTpJBJ
      0GU4MBOzPPfSab781V9hbvQmocA9SKVkYbFFbhMdep1IpIJIZE1rUb57LwC/2rRr7aDnrYXZ
      W7Gka/nNnjVtQsWe3e9qZR1qgaMheViUhWId+Wy5IHfbKrFLtD1500O6IC5ci4ZBSBNTLQH0
      rTZKvc4cNgeaKhrLZDSX9F5OVSdtyD8Mqzm5jVDAVcCuiaOpW8kQkiTFctiLFJ2i6YSmwHxG
      LNtA2bTdNmcI4w6sZhTFLi3DVGwYm5hCZAseFIktUqNnmWMRMcWVWytwaqlZkC/n/ewrk+d4
      m0yHsN+iSdtWWiAzN0+xVx6Z7t/M/mdiupiY7dFGk06xX7CcgRkxbhQeJcEBzwlpGV888UmS
      RVHjUu838UsiRj5SOcRn6sTEcymzjFH9AWkZZ2ZBpgV6vPo6VS6J7ZKxiiYLjGUs4yqK2p68
      4eTri/9akDvUPL9U95y0TqvOhzHUrSfJG1+F83MyDZRJyyYGBcMxhPxdAI8Hv0O7u1+Q/+Xw
      Ef5V36cE+c5QlGce+4G0jP+t/+fJm6U9UPjcXD57kmhqTe8zODQor+0GjGKGG4NW1niL7ckt
      SfKKzM3NspC9QlBL0HtjDCObYnpuGYfTjmpm8YVrWVqMEnCruCPNpKJzmGaRJ//+DUJl5XTt
      2cvo0DjJXIGjR48Q8lmBhCzev5SMACsT/UT1cuZnR5hfXqUmEuLyxV5cXifR5QSNtSEuXbxK
      Q3sni6t5rp74B9yReqLLUVzBSsIuk1gsRjxjoBXjTM+LjuIWFu8nSoPjBhr40uf2El9eQtFz
      LCQKtNSUMTA2S1dHN16Pnc9/YQ8z48M89sgjLMx2UFNXSV3oGIqq4nfbGRmf5uiBbmamp2ht
      vLfBdC0s3omSDuAvW1stRiJr+YDDb64p9/Ss21a4gMCbXmP1DQ1r54XXM3Z3dna+KZOsPH9K
      Cqadq8ke6bFK5woBU9SS+DUnqkT1YBg2MkVxemYqGot5MQM5QHcoRk4XtT1hjwO3XZS77Dbp
      vQqKH3WT5FRVTnn0a4dSAEn7UrqHnKQdmunAZYj2SUXsVDnFkdmm6Ju2O6doGHeSTMvMU+UU
      TUZsqorXJtd+VbpS6IbYvtlsiES2WZAXcHNfhajtqXClOb0omrgA1HuTGGxjW6ClZJGv/LU8
      U/z/ve9bVEq0JDmtGV0Tf9ibiTDnlhsFuaqYeDdR1X06/BwOVVSD5rR6qZZkJBFiICEmF/fa
      oUOS5RygnteE2DW343qiiaF0gyDXFKTeVxpFHiwTcz7nDRvPLd4nLcNjFwNK3Y4qxwI7vaIC
      xcBB1rFXeo0rfwkV8dn+waUuTs5VCvLPN1znn3edFeT9sXI+9eJnpWVc/OIpPLbSTibt16a5
      NpcHWFxaAtNkbk4MymRhsd0pmQIZ2Rij82nIxCloXm4O3GAhnuFQZy0/OHmVf/LLX7xX9bSw
      eE8o6QDTg9eZSxRJpYoE/DbsoVqCaprTvVdw3UGGEAuL7UJJB6hs7SE+Okd3TxUBr5OBgWHa
      upoxd3ZgFsRFjYXFdqc0PLo3yK5d6xqfnl27Nhy99xtaNlWnOyC389BsHnRF1MSoZhpFF72T
      vKpKxCV6TGlkCTIkLePaSlCadqgi6MPjkKRIUpapUScFuVOx4zblWrLeqNybaWdgioBN/AgF
      KVCjijY8moIkitCaz9X5TbzqatSLUvl4upu8ufXfP6U5SKfFMkzFjm6Xq5NshYA0jlHAnmdP
      mejo5LPDcEo0fVkuejlSKdekXVgKYFdLf79tpQXS83FWrv076bG0fZ/UY8qXfQFXUYwTk7Yf
      ZNX1GUFuL05QF/8taRkPnnuOhC4a1v36XoM9ki2P2vw3aMr/Z0FeVCtIuuUR9nqe+u+lLpHf
      OvpHHCkXnY9sxRlp1OjNSBQ9dL7yY0EetK1y/aFPSK/51RvfYCInetVtxkoWpiV56hTYVMOW
      KsgcIuHfHr7E4/XiR++NpUaenhE92KrdSX6j84q0jH3fPibEBSrtjqbJ0PU+xqbkX1mjmCEa
      XSW2Yu3wWnwwKLUFMjKcOd/H5774JQCMQpqz5y5RU13FxPQMNWVuMs4wbneQMitMkMUHgFts
      gQZo3v8ALiXP/PIqY33niHQcYHh0jJC9SP9UEjU+SyBsvf0WHwxKRgB7WQPu5XGK5truZdOu
      w1wbGufgvl0spw0e6lpb6IXcd7IvbmHx/qWkA/hCEQ4eXHv53W8qNXb3rNn2BOVmIncVBUOa
      7ghgKneEPGJKoAatjjJJgumEWc1CRlyRuUw3FZpoIgFQMFRp1OOZJHgkDlM2W4Aam3ivvBJh
      uShPMlLvl+fKstkDFFVRc2RqBoYk0K5i5tEkQWVR3dT7xfv7NZX8Ju1uCtpwFrauK4lmkJpz
      qAqE5DGBWcnKQ6/4tBVsurgm1Qsh4jnxfL9mohoSTyeg3G2SLZa2Y3tFhzaz+DNPS499d+Kr
      LEleqs+0NrBboqEZjcOlBVnGdJWaml+UlhHLOVgVzVX4hyFVanfzhaYemtvEe60Uy+hN3i8t
      44udJjKPMH+gm4xDVPtthk2fxZd7TZAriosvSULzOFQ7ca+83V/ZHcBQt94BJlahd15sg+0d
      PMJ0iUdYh/Mygaxou5RKwNUl0XYp58/j0MelZRyt0cnfYtVX8lchscCPT7zOfFSuR9VTUYan
      o4I8sTTFyMgwozNRLpw/S6ZgRYKw2B6ImeLnVmhvmOXlq1cIlweZn1+mZ2c7Y0M3CAX8TBfL
      CGurXBycI+ixEY/HqQy5WDU8GOYqVy5eJZfPk07ncTo1TLuT9HKUIiqKzcETH3/0XrXVwkJA
      mileX5lmOpYlH5/FU9nCyuQQCytRJmfWdhxnx0Zp6NrFzMwczRUeJhdX0fNpsjhp3tHMciyO
      X8sxNhPj8OED6IoDl9OFc5NNEAuLe4WQKX6fXyPkayDvvEpNcwfRmVHKG/dhCy9RUVaGaXdT
      5m9h4PoNPvrow0xML/LRB3eRLZgYig2jWINLM5hbyfLEHhcO1cbRIwdRZUlgLSzuMUKm+LI3
      V+ldu/YAEHwzMnQoVLp66XrTK6y7Y80RZH1xv+bx07rBFORd8w5TbORs8uCqGd1BWrJAHV4B
      2ZIkUwSPxMJVUTWuxuQqr93lSbISjzBUjzQ4blZ3S++VMvzMbGJbWGcbkK2BmUnaWUpvXRXn
      MCFkigmjddNGnf2GIFcxN213U2gA9x14xIQMO3V2Ud1jU0zCkmz3AFm7S7oIdtjs5LV6QR70
      hOiJiL9fg1tFV+ShONs9IxTN0t9vW9kCFQsZZoZelB77H15tYTErBueZScKqJCn7ww0mX90l
      Nn0xDX/RJ9/n+C8PnsZnF/WgJxa7mM6InXxwGa5FZbmywLbJVsozh39FmjH9t/v/Z/oS8s4v
      w2s3aZBlUlcz/IfWfybIV4sePn/+P0nv9dfdX2aHW+6JJ0NXQxRtopcaZgF7cUp6TcHWIP2I
      JJyPkbeJwdryaiU5idpWNdN4dHmOsFD6myi3hHq+ZRG8wCu9AzQ2NjM1fpOPPvwQL/z4RVoa
      KnAEGskvj5AyHETqWkguTdPR2SlNQGdhsV34/wFrSPeaif23VwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29eXQl133f+amqt+/Ae9jXxo7e9ybZFEmRlChRmyVLihfZo9iK47HjiWeO
      T2YyJzP2OMcZJ5M443F8MhovcWLLki2J1sZFJEU2m2SzN/SGRncDaOz78vDw8PalquYPkARe
      34sWWiK7+cj6/EP2r96re+9D3aq63/tbFNM0TSwsPqCo97oDFhb3EmsCWHygsSaAxQcaawJY
      fKCxJoDFBxrbve7AB4Xp0esYjiAVkRr8Lu1ed8fiTcr2CWCaBmuJBIVC4V53ZVtMjg8xfLWf
      m1Mr97orFpso2yfA4KU+hqNZ6io8HD506F5358cSrm5hNQv7OiL3uisWmyjbJ0B9UwNmKoo7
      WLWtzw8NDb/LPbo9/ZfOMzszxWIsfU/7YVFK2T4B5mcmqKzfQXVFYFufH7l+mcnJCVDsPPCh
      43gcd3foO9o6mIsm7mqbFj+esn0CBEIRVhemmJxd3NbnI+EwRd2gua0dt/3uz/vmti56WiMs
      r+XuetsWW1O2E8DtD9LS0kIivr1FZe+evXidNk6/eoJ4Jv8u905kfGyUrG4n5HPc9bYttqZs
      X4GiC3OMT0wRqWvd1ufnZufZdfAoDzzkQVPv7rxfi85xeeAGjfV1VLftvqttW9ye8nwCGEXO
      nDmPotnQ9eK2vlLMZ7hw9jTf++73iGfurnQaCNdxZG8H8bU0xaJ+V9u2uD3lOQFUG09+8kk8
      DhuBwPYWwcVCnmw2C6oNTVXe5Q5KsNlRc2tEE9Ya4L1E2b4CTY1Pozg9ZBOr2/r8nsMPsOdd
      7tPtyBdtfPZLX0ZTS3eBc+kk80tRAqEwFUHfPerdB5eynQBenxN3uAqXd3tPgP7zr3F1eBaH
      w8FHPvFJAq67O3Q9uczf/f1TfPijH6c+vHGh91+6iMMfwuHZ3jgs3lnK8xUIcDo0Tp06zfzC
      8rY+v+fgEXwuB6pqoOvGu9w7kWw2SXtLIwuxTIk9EPAyOTFBbC151/tUbqSTCbK5PO9kDGPZ
      TgBdV6iorsdj2+bFrNoJeF3s3Lsfp+3uO6M1tnYwObNAR2NFib1YKKCqKplMZotvWgCgp/nW
      17/FpSuXiaVLZexMJsPi/Bz54p3f2Mp2AtgdDuKLk8TS21OBMArMzUzz2munyd0DJWZ8fBq/
      S2fhFlcIp9OJ0+nA6XTe9T6VFZqbnu4moqspAm57yaGL597g3KmX6b85d8enLdsJoBfzBCsq
      cTjsP/7DAKjsu+9D/NIvfJEK793fjNI0FV03OHvqFAVj/Rm+ujDFbDRBPL72jj7W35foGcan
      l1idG+d7P3yFzT9X0O+hfsdOmmortvr2lpTtBFiNRskXDc6fOsH4bHQb3zC5caWPHz7/Eqlc
      6VOj/8JZhkaneDcTZIRCIVy+Ch5/7CHsb8qwoepGqqur+eSnPonNsOTR26I6iFQGCYRr6Gip
      KzkUCEVQ8nHmltfu/LTvVP/uNm29u2hpqOMjH/8UrfXh7X3JVGhsqiNfLL3QPV4vg5dPMzRV
      uqCeGrlB3+VrFLa7aNYznDt3Sfr5WEwi1xo5rl+9ysmTrxGpqd9eGx9YFEy9QL5g0NHZwead
      nKX5GaYWE9RV3bmSVrYTYHpsDFcghM/j2t4XFBWPy8bA9Zs47KXDVowC8/MLwoXrdHlYXRjn
      9IWB7bWhuQk6Mvzxn/wpr5+7XPKYdrh9dHZ24nNtemXTXHS2NTE3O8XQzbHttfFBxciiqg6S
      yaSw2I2uxOju3Yn3J/DwLdsJUCwUiK/GSKazG0bTIL66SiwWY3UtUXIBGoUMrbvv45Fje8gX
      ShfBmUyGXUceYmdrdYndZlNYmJsnnd3m60kxQdwI8Zu/9qvs7W0vOaQWEgxcu0EsXeqG4Q6E
      aW9uwOXc7lrmA4rqwumyUVERwmnbuGyXFxZQNZVTr51kIXbnUnLZToBgZZCx4WGWopteLUyD
      8ZFhnn76GUbHp0omwOLcDP2XLzC5mBBUhJV4hnq/waWhmVL7wgwZ08HO7tKLeSsmh69x/nwf
      z77wMnaXp+QxjWriVGAxmtqw6TnOnTmL4vSSzliBMrdjeWGatOFi356d2LWNX9bldmG3Ozl8
      33FqKu58J71sJ8DaapJAdSM2Y7N+brK0ME88HmdhsXRhPDe3gKrozM/OkLnlCdBQV8XNqWXa
      GkufAGspnc/97GcYGx7cVp/Suo3qoBNQUW5xN6qINOEL+aitdG98PpmgIhwmlcrQ2ty8rTY+
      qGSzecYHL/DdZ15k8xuQLxBk395dvPC9bzGxGL/j85atK0RFJIw5eQWzetNFq9o5/uB9ZIpg
      d9hvuQPbQNeFKT94+RxnrtzA5/UST6QIbZJI9x7cT9/FfvYfOLitPqWTKRxuF2i2krbXonO8
      fvYCjfV17NgUjGNzuOnt2sG5iwPYnXdXml2eGeP0xQEyiRj1Pcc4fqALAKOYZ3pmDhNwewNU
      R+5cWnw3aGyqZ0f3QZxalrHJOXraGt7+jcfHJ3jwiZ+hp/nO463L8wlgFHnpRy+jOlzksqU7
      qLlUgngqy8j1y1wY2IgDLmbXWMtCVSSMtun2rNnsFIoGVVVVuDYtolbmxvibr3+b6dlZbo5N
      bqtbB48cwOevoTrkpmhsvIAFwnV85Stf4WNPfoLqwMai3eH2Mj+3wPHjx7g5fPOOf4btsDB2
      g6e++136h0vH4PR4CQaD7Og9wP37O9+2m6ZObHmeF59/lgsD706ffiIUJ+GQm1TOQDVLZex4
      IkvEkebyzfltnSoWi70teZfnE0C18bmf+0UcLhe3OjaH6tr40s+3CV858qGPsueYjuuWO23H
      rv00tvfgcpWqSZqmkc3l2VFVhc/jZjvMzcdIr4wxo3s4eF/pveWNEy8QTeY4/MCHqa30bvQ3
      6OXcuT6KxSILqz3UhDzbamu7RKMr6MUCJ194Brvt0/TsWJdbM8kE8Xic1dVVRiur6GiuAaCQ
      WeU733uOPQcPUhna3jt1PpPgjdPnqGrqYGfHj3+VM40Cr554mUzeYOeB+2iqCf34Rswsc+MT
      LBcVjtTWlfzd6+si3JxZ4tjxvdvqr0M1eePU67iDVWU6AYBcMspLL12hc/fBt/94AHo+zYkT
      rxCoaeXIvt6NLygqV86/SlJ38PCD95fEBEyNXOfm9DLHH3rk7QVysLqZL/93X8IpmWRb4fF4
      qYxE8NlCwqM1uhIFR+kFtbowxfxKknw+T+fuQ+/4xQ+w8/AD7DykMzu/TH3dxu9U3dTOJxua
      uT40WfL7uQJ1/O7/8bsMDQ3T1dUpO6XA+XN9HL7/Q4xdPcfCWg01gdu7dURnJmjoOUJ7XZBz
      5y/SVLONtDaaj5aeblpQBBFjamKSXFEhkcwIx2QMDV7HePMJXZavQHohy6WLA7T19jI7vUk/
      Nw1uXuvHHW5ibWWRzWpxdGGS1ZSCV8uzktxwpkquxRibXqKnJcLNiYWSdpZmxnn5pZcZnSq1
      b0Uw4CRTdEMuTu6WPYWmxlpSyUxJn0I1TQR8AT772Z+hmLnzBdx2MAydQqHIWjxe4gU7M3Kd
      p597kddfe5mRW8a3OD2Ox+/nykDp4v/65XM8//zz9PXfIgroOX74zPcZGJkGc6ON2Pw43/vB
      Mzz9gx8wt0mi9AaCXDn9Mk/9w3fAuU3lRk8ycWOQvquDrN0S0afZJJexnuXlF1/kh8/9kJsT
      pT5Cu3vaiCWz5PP58pwAhqHj8Tn54Xe/w1p28xET7E4Gzp5gbKZ0Vzeb1VldHOFU3w3sto17
      eiGfwywk+c6zJwQtPvvmeqIkgMzMc/PmBBdOn+RHr54pkVovnOsjHl9kLatjvzXueIuIsPqI
      h6f+4R8IRhru/IfYBhMD5/mjP/0zXn31JBNzG79JZVUNXreTcG0L7U01Jd9RFZ3vP/UtMvqm
      MRg5EnkHH/3oRyGbYLOO5vf7UVUFu9OFZ9Mr5ujIJNW1NdRUBRkd25CYVVVFefO/JRhpzvdd
      A+DcuXMlNws0Hz3799DdXIvTXurN63EoRKrqSG2eGKqTqnCAheUYjQ2l47N5QnjsCplUujwn
      gN3pxWX3sOfwUar9m97pFY1I0EekrpPu9qaS7zQ01uBxVbB7Vy+b1qdURGqpqAhxYNduIU4g
      WBkhv7bI4NjUhtHU6e97g+W8i1sTPBw8cgRdN9mzq5dboy5tpkHv4QeIBErXE5PTC1RWN7Iy
      P36nP8O22LHnGP/0S5+jo3dvicybSaco6gY2M8fYzNLGF0yT8Ykp6hqbqa/Z7GKikVqZ5qmn
      nmJuJVnyWphK59h/6CjVQRfZ/MYCtXfvXorJGMmCnb3dLW/b89k0wepGDu3fTSa1aV9EdaOn
      Z3n66WfQNXfJxfnSM9/lav8lljJ2PLfs5Dtcbq4PDODctMtezKXImXY+/cknmJ2ZLfl8fnWO
      mq5DtLXUlecEgPWIsOaGehpaWkvsLo+b9q4dVFfXlA5OsVPf1kp9bTVBT+md3u4J0djSQFtT
      aZa5bDaN3eMnHPBvGFUn9z/8KJ01bnD4StcHpsHc+E2+/nffIWeUTqbY8jyvnXyNtVTpE6Cx
      qZ7E8jSVm7Nb6Bme+8EP+Ks/+1P+37/5zuYGuPDGKzz30mvC77EwP08xm+Dpp58ls8nXaWV2
      jJdeO0t8eYYbYxuvAqHqeo7saaOt9wjNdRsXenp1Fi3Qymc+/QkmR4Y2/X4qqqKgKAqKppaM
      u2fPHhIri9S1dpXIyLPjIzgraqlwFkscFv2RBoL2AtcGR9i5s2fT8HQSa2ny+Rxrt+zkHzhy
      FLfbSzq+RHbTRsDUzWsMjCwQqfBS2OTmbnP5cJpp+q8OMDFdqg45I61kZwaYW46X7wTYKiJM
      szu5fP400zNz3OqSNjF8ndHxKbL5W1whYnNcujbMSrx0Kz2Z1vF7nCQSm97P9RTXB4a4MbmM
      WsyU/JHQXHz2i1/kgcO72HxgfmoMLdBA765uqoKlatPk2CjNnbup8G5aOJoGs9NTeKt38JEH
      D2+ym8wtrpBcmObMpasl4xsbucmJl17h4L4ORqY3dsdTiQRNHb3s6WkjmdwY3/LMOM+fOM3F
      sye4ObmxBnAFqohO9fPMM88RjGz2utQpmBrHjh1D1Qsl475xfZhdew9gy6+yEN94J/X6vMxM
      jDE5u4TXu/HkW5kdYyWRJVVQGLh6ZdP4dHTVxbFjRzGLJe+2VFRWsJbMc/jgnpKd4KaOnTRE
      ArjcdrK5Ta9AxTw1zR2Yhk5VpJJSVA7f/yCH9+0szwmQT8fR/DXUVQZQN79rmDpLqzl2drSg
      qGrJ4KZmFti3bzeKVvruuTAzTdeufbg0BVXbEMXMYo6FxXl69x6kIrTJy1BxUVMT5Pjx47S3
      t5VueK2tkUgkqGtuw70p6iyXzWAYJg67A5umbmojy+jYBKurcbL50oXdsQ89xtH9u/CUSLAK
      3T29HHngfmrDpRtU7W0ttO06SMAXprNpQ1asa23jymvPs5h1cmjPhqqjqipubwCnkmc5tpGy
      Uc9nKOgKeiHHjaFN+wCKjb17epmfX2D33j0lv+3Orhaee/YZpuImDZt2ur1+P75ABS6nA793
      Y+JrdjvR5SWSsSV0Nj+NNfbu3cn8whLHjx8v/W2TaXb1drEwN8ut8Ux7DxzEMG1U+jfdXFSN
      YjYFqLhvkbjj8fUb2vDQcHlOgGxylaVYin1HjpFZi20cMAtMzSzS0rULt6qX3CFnpqYJhOvp
      bAiT3LRYWpibRdfcPHB0DwuLG+eaHbtJx/77ePWFH9LWvskXqJjg/IXrnD11ksHR6ZI74YkX
      nmdmbp7JiUkKm16B7A4HJmBilqwzRgeu8djnv4TbrlJXVVHSxplzVxgeHmZqdrNCY3LlUh/D
      w8PcHJkoabv/8mVGh6/xxvmLpDZlvhu+ep2f/fKvoOmFkgtqq40w1eagoiJEuKaRJz/y8MYX
      jAIjE0scPHiAmfGRkkVwoDJCTbiS0YGLLKxu3LknJhZor/PTunMvk5Mb7+HB6mb27ezlC7/w
      81T4Nk0APcVLL7/OSnSZy1cGSsZ3bWCQrt5dBN1aiSvLhZPP8lfffAa7P0x9ZNONStXw+/1o
      isHiUqlbzPkzZzh7rg8UBe33fu/3fo8yw+kJMjl0maGRcXYfOIzP/eZ7p2KjmFzkUv916nZ0
      lSTO9bsU3jjbh+EM0b1pGz0cDnHm1OvMRDPcd2j32/sDqmLw2iuvoDmcGJqLuuo3H6OmTjDS
      xMEDu2mqr7nlovJx8OBB2na0lOwzLM1NMTW7QCaToaah5e3+qkqREy+fILEWp6h5qAm/eec2
      ilTUtnFw/04aakvXJW5fcL2N1qaSu5dic6zb29pwb3YLNnK88srrrMVXUFxBIhXr65n48jyj
      E9Mk11bR3CEq30zJoudSXL02SCaTJlUwN9pXNIxMlNdP91HT3EFNZXBT4wqTo8P07jtAqLLy
      bW/NYjbO+f4hFmdn2dHZTUVgY5/DoRmcOvUGtU3tb7eNaRAIN3DwwB6aG0s3uzx2gxMnT6F6
      w3Q0bxyra+lkZ3sDs1OTuILV+D0br5K5dJK5xSiBijA1m16DqiMhFubniKcNFHOdkvfD9yrL
      KZ1f+oZ8u/urh/6SaqcYEZR2HKKgbd/RLKPb6V+tlR57zPnvsCtZwW4oXkxF3IAZLxxiuHBc
      sPttGXYFpqVtKMhdr6P6DvJ4BXssC3HJV9byMLIqbuE5VJ2vdF0T7EVD49xqr2AH8DtB2+5u
      IBDUVql3iuMzsZPXWqXfcehjKIjx3X9+vZm+ZXGn+Imq03y56QeCfTZXx3+a/g1pG/+i9wXs
      aun7kw1AURT8fj9gMjc1TsZ00ta8KULJNImuxAiHb11M3F0SRpHLy/KdPk2fxosYGmko7Sia
      /IKWkTMgqcs3yD3mCE5Sgl1XAphIdj+Ndum5bKqCQ5NngVDMjHzn2QBTsnGfMyEpifGP5WE6
      JZ7JqYJTFcegYNty3HYDZHtNW2FgSNswcGBsMZMcZhoVMWXlbMpkYEXs1yFPHJ8peulqep6x
      hHwcDqK4lNJJVvLJ1anrDC5oHOqOMDR4jVRGx2ZksAeq6HvjJD17D3NgVxtf/ep/4Wc++2nG
      xyZobKxnbHoep82GL1hBJr4IzgDVfjsLa3mCbo10poBGHpuvkldfeI7HP/I4zmAVydgSsaU5
      glV1xKIx9h46jM9Ztt4ZFmVIybzOJFbxeN383be/x0D/AL29rcwvxbnWf5VQpJbo/DSqzUXz
      jlbmBi+xZqjMjw2ieKrIFLMsTo+xuJIkOjfByVOnSK3G6b92jY6uVhaXV7l+fYiGlh14jSQz
      iysMDQ4xt5pjerCfolkgnrBy41jcXUput7W9x5g9e5Z9+/YR9Dpx2h34fB5qGhrJp2LYfRFA
      ob25jkBFhNTYFLUtHRiuSsyCHbOQ57VXX2P3oftpb21mLadS21CNx+nE6/VSVR/GpeQoeEMU
      J2fZ0dGJ2+Mh7FG5NjK7sZi1sLhLlEwARdE4dOz+kg/cf1xcxPXsPgBAfcNmd4PK9VV8KCxd
      K9z3wAMl/25sLF2YPlDdeEcdt7B4J1DMdzMZzjuMkV8me+kXpccOv/D7TGXEiKB6n0lQsj7d
      ETQ5WCPab0fQaQo+PgDPjylMJsQDXRUmeyQ1/FYy8PqMfDH4zUe+L23j2YX7WchvM/0LUOMx
      eUDmX2cWCOaeF8w53c7XZ5+QnuuXgv+SsG1WekxGXmsm7Twm2BUzh6soKlAAGdsuUMQ3AFf+
      MnZDVP5OrT3ED1a+INhrncv8WvN3BDtA0nE/KKWOdLes7U3mpsYYnbxlsKZJNCqWIopGo5iG
      zspKTDhmYVEOlEyAdRUoT1WFn6HBa1y81E//hbPcGBnnuWe+T9/lATB1zp5+nb7LA5w5fRqj
      mOds34V71X8Li5+KO1aBMA2WYikWZiYoZpJcuHiRnFX1x6JM+QlUIFien2LfkQfxOhTa23dQ
      MT4lPbmFxXudO1eBTINPfvqzJUpPR7sYhG5hUQ7c+barot4zlwhD8bLs+2fSYzvCfnwZUdCa
      ScBsUpRV6rwmvWHx80tp+Opl+b7/3zxyGp9d9FfxKr1MZ0SFZnAFvj0ktq0A9i1cC0Lpb6Eq
      Yr9en+jkcmL7eW98djgheTC7VJ0/7vimYF8revn20Mek5/rCrkGc7tFtt20rTuLQJalkzAJ2
      fUL6Had2AxTxclxzPk7S9ahg7/DV8BvN4u+kmG7SRXmQfTj1Z4K/0U+kAkXnp5mYmCQeXyWx
      jZKj0Wj07f8Wsynm5udJ54osLy9y4+pl+i5eIvcTVPewsPhpuXNfoD2dfPNb3+Hood3El53M
      xBLMzOV54uFeZubjBIMecpksdnRUXxgyMU71XeNXv/yLnD5zmgd3t3BpeBlvsJrU4iTHD7Rw
      ec5RkvDUwuJucee+QKqDprYd+DWdgqkSrKhgR/sOTr/+BoV0nEtXBmjb0cyZC/3Eo4uMzaxQ
      V7XuzqqgYOgGwdpWkrMDeCu276VpYfFu8BOpQJ2dnVR6bHgVB6bDy/TwTdqPHmIpnmN3TQP+
      QIj9u7vxhmvwOlTWcuvBE7u727g+H+fg4d2M5hao6ujBqSRorrv7RessLOAn9AXq6uwq+XdD
      5AgArZtsB4++dZ6NdBjN7T00vxlduPPgW1vlLlo2JV2wsLiblJUvULGQYXb4Remx7021kSqK
      viRb+QL9aELhL/vFdUfEbfLr++U/yb30BdqKvtVu+hNiCsM6d4qHa2fEL5g6Ln1EMN/OF+jj
      DeMEHXnpMRmqsYZD4r9jomKo8jJGqhFHQfzds1oXRU38EZezDmbSYirJXBGmJaofwGdaloXA
      np9YBZqamia3zQqlFhbvVX5iFWh/TzM5zc3C6HVqa6txerzE1gq47SYd7Tvu1XgsLO6In1gF
      Cge8XHrjLF0H9nHjWj/PP/0CczM3mI+KsaAWFu9VfioV6KG2IEMXL3P04Y9x89pVqgJ2Klq6
      78lALCx+En5qFaj6wQcBqLpfDICwsHivU1YqUCpb4Guvy+vpxnNgmOLq/9wcUoVmq4iw2/kC
      DXzi3xJyiHmB+otfJGp2Cfbv31T4xg3xXB6bSecWpbdOHtgv9QX6N7N/wVBO9HG5uqwwuCKO
      z2s3aZYILh41yYmD4k0tVgjQLEm6C/Daw/8LPX6JorQFqrGCXRcdkUwUTEVeBEQx01IV6A3+
      kClFVKca7GN0uq4K9tVCgJdWHxbsAP/Y+biQ16nkr6PnUvT19RG7TXaGVDzK5OQU8dQ2a+da
      WLyHKXkFykXHWVMqOPnyi+zt7WA5WSTkc5FKJgkH/URa2vnWN7/J8SP7ubKSw5FeoKquFhMn
      iUQMn8dNR0fHvRqLhcUdIzyfL7z2HJ6qVubm5rg2MMDE+BhLowO8eGkEl6ZQVddEU22Y+eFL
      OOq6uDFwg6tnnuf6yBxTM9ur0mdh8V6h5Alg91fxuS/8PKvz42hOH51dQVqqfBQcuwjNLaOw
      rgBp3kqOHH+IhfEhdh08yvLkTarrqtAd742ashYW2+WWCVDNDj9QJ17IrQ3rOTY6u9YXe60+
      aK1fL7nTUi/Z77ewKAPKSgUycwsULnxceuxbmf+HpFkt2PcHhmh0Lwn2iXQN/QlxvRJQl3gy
      8FVpGzt/8C+IF8SawUdqDWrExM18tOoUP1v3I8GeVxtZ8X5Z2sbvvg5I0uP+Ttt/pdO3vYLd
      AJq+hDvfJ9gzuoevjL4g2D1ahv+4699Lz/XM2j9lzdj+TW4+Bdej4hg0BWolvxPAXIqS2m1v
      8WtNf8uR4BXB/u2ZB/jjkc8I9nbfKn963yvSNj710ifI3pIAuNQVYnmekYkZIrWN6Kko/qom
      zEyMZNFOW3MdFhbvN0oWwaFILfPzC9S6klyZTONUDU68do5IaItpa2FR5kh3fByVbeyut/H6
      +X4eOX6IZ184cZe7ZWFxdxAmQGdnJ4X0KsuJPO07mpmdm6ez09L2Ld6fCHkourrWgyvuO3Z0
      3dC2/fJCFhblRlmVYzEVTRodBPCNGzbmc+Ib3eHabloCoofq6CpcXBSVioi7Gs/+fyVt49FW
      Sqo/vsXZOYVz87IopAcIR+4XrDMJ+NpJub/RXz8+uEVE2P3EEM81lw2zmBfzNAXVRXoC5wS7
      icofHhsS7EVT5URCPu5jFa/gUbdfQ06v9lPokIgmpo7dFMtYARSUsJC5GcCbL2DoYsxsyO2U
      5nWq8zjJ2OW1zv7jh8G8pXp0aXLc5Xn6+vqYmFko+VB6LUY6b2AaeZaX14swR6NRlpZEedHC
      opwoeQKEIrXMn7nAgd4d3JxawsjESEbnWZybphBsYd/OVmanlpkeH6T/5iTtTfU8+4PvcP/x
      49g8EfRsgo6O9q3asrB4zyF9BTIzMW5O5ymujJJOZznQUo3RtJtrV05SLBo4nDVUBjzEVuOE
      a+rp6Ojk6e89RUXjbqzlskU5IUyAzs5O1GA9fuMi/pY23E47Ya+dG+MD7D/8IIlYnHh0FtPR
      TNDrwu9UGJuNopkKe/bK370sLN6rbKkCHT9eWtPrgfr1/D614QroaC05ZhgFnMceIuCw0hta
      lBdl5QtkRYRZEWFv8a5FhE3MLKDnkoxNzUlPYmHxfkKICPv7Z6/zyQONnB6ZJR9vI2/z4dPy
      RFMGLrVIIpnl0H3H+MZ//XM+9PiTrC5M4Y80sDw7jqHYsTnc+OwGa6kc7TuaGRqbpKE6zMzC
      GjU1XlbieaaunKP7ocdwoWAU8xQycXTNTTYRp6G9l4ZqK67A4u4gPJ8jHjszWRW/pnPq9Bni
      q6vMzc1z7epVJqZm0dIrxAsK4Zp66j05+q7PsrqyTCyRJ5NNkVpdZnxqlhpPgf/27WdRjAJD
      164QampneW6e/mtXCVfV0Vwf5uboJMPDw1wfGiHEGuPRNLHY6r34HSw+oAgRYY8+HCK2mqW+
      0k8xk0DzVqCnDDq7QoRDfrw28GhwcFc3Uykne9qrqAxHCAaCaBooJlzuO8N8pioD9rMAABzw
      SURBVJpf/tmPMDy+QHv3TsIRH9NRH92dXXQ3hpmbjRH22VDCTQR8TupbGmiIXaQiJM8daWHx
      biBEhLX4oUUosCxubnlb1hX/jmaxGnMgGCQcXi8ZVFW74UsU2n/47f+vAsHP6PiHHryDrltY
      /PS8K75Ab1387zQurcCTtfKaxL/12h6WspI00IBMnZ1JKMwk5O3sq5ILY9HA75C1i/a/7VO4
      LPEr2upcqQJcXpJ/Pus4JPUFOlTvo1Ui2AUc4JKUV2gOmHyyXfy8DYWs47BgL6qeLcfttNkw
      FcnAt0DXatA1icRmGijI0+mYuEARB97uTNBkFyPCYsUwV4ufEuyqAgfEwEAAEvrPod6uRth6
      XqALrCZFqQ9gNbpE/k1fIqOYZTkmv4IsHyGLckGSFyjEKz96nvqID2+4nlh0he7eboZvDGEz
      ddzhKKm1OE0t9QwPTDAwdIPPfvpJRsfGiLgNXh/L013nxsgmuDmzTEMkwFIsQUNbD/VhqxKG
      xXsL4eVgZOgavbv3MT63wtLIdQzV5PXnf0jTnmOYmTUmRkZp7m7j0oVL5AoqO3bsILm6SGZl
      hqWMwo62HcRjMS70D9JWofCjV89QGQkxPGLtK1i89xBUoMcebqC1NoBiFqgP+7l4bYz7H32U
      kavniDS2kxwf5MrlYY4+cJz4coa12DSqzYW/qpHGtm6mxyao7+wk5LZxc2aZxx++H3+oEk0s
      3mJhcc+R5wUCOt9Mcfjg8fXFTHX1ekXHmpoIrmAYhwqRIMC6CvSWTtRQvbEArmnaqCBfae1t
      WbwHKStfIL2QYmHw76XHVGMNBTFay5M7I61anrO1kXGIvjWavkAk+SfSNr4yepKUIe5T/HLX
      DDsrxMIggcx3qUh/TbAbipf8FlFL1d//C0xJXqBvf+hrHItMC3Zn/hKu4oBg1xU/RVubYE8U
      XOz44Z8J9pAtztRjH5L26R9dfYqx7PbjPOI5mJXU6VIw8WwhJqULSMf9Hx4Y5+MtccF+Ix7m
      /Eq9YK+0J/lU/UVpG8e/e5yMXiqZSfMChWtq0QyFoN/59t3ewuL9iDQvUHOdi7/7m6e4cu4M
      q9svDmhhUXZseW8/sL+Xi5ev382+WFjcdaQRYYripn3nLgJ+DW9Z5Y2wsLgztowIa2310Npa
      e9c7ZGFxNykrFSiXL3D+mjwi7Nw85PTtR4R9rH6C3+wVfUwWMj7+aPARaRt/2PN/4dFEN5Gk
      40EKmugU+NpcBS/MiHmMgk6TY1vkGn7S8+9lLjF87uQvcDbaJNh3hQ16JK5XiTxMScbt0XJ8
      9/gfC/aU7uJ/vfFb0j79bsu/pN45Kz0mQ1dCFGyN4gGzgN2Qn6egNoAivm6sOR8nbxNTLWjG
      CnZjUdKGgYJ84RrMfAsFvcS2pQoUX5inrq2L6grLfcHi/cuWKtDcUp5TJ1++V/2ysLgrbKkC
      TY0N09Gz6272xcLirrOlCvThjzxKR4fkPc7C4n3ElipQR4c8fYWFxfuJslL5iwYMyJMLUxDd
      gG7LYKqZv5oSU78vpeHbQ/I3w9/vXI+HvpWxdD1Rs1Own5hTpOfy2Ez6tqgo+3MH/laaF+ix
      +kdpCotK09VlhW8PbT8vEGaBoMw/qRDg20P/XNqn/7FOoV4ebCfFro/iyYt1um6XF8htvi7N
      C3QtvYcpZb9gb7Av0ekSXexvnxfo94S8QD+2RliVpQJZvI+5bY0wWayphcX7idvWCHvt3OW7
      3R8Li7vK7WuEtbXciz5ZWNw1fnyNMAuL9zFlpQLldIWXJ+X5dH77kEmFS1QRNAV8y+LnD0VW
      +XSr6EsylXRwcnqHtI1A7kf4dDEVzE63j7x9WLBPB9q5HN4p2Ou8Jv+oR+6ClbfvlfoCjSV8
      XJP49qgK0lpZyby8WrvPZiNn3yfYi4pXeh4AxdlB1r79mFbViGGoYt0yEwVD9W3xnaRUBRpZ
      qWAgK6k675tjnypms84b9fgdchVIduVsmRdoLbrA8Ph6CF5saY6VtTQAEzdvMDQqpr62sChH
      5HmBXnwWVAc7G3wMKA5mzv4QWh7go0e7uDo0QrXTYKaqnga/JRNZlDfyvEB79mGzO6gM+Rjo
      O0PO7mVpfpqBwRGSsSWKvnpqfdbFb1H+SPMC7agLouZTDEULfP6zn8JMRxlfhfaGMHZVp6tT
      rIZiYVGObJkXqKN3z0bFR2+Ydu/6/1oXv8X7ibKKCLPyAll5gd7incoLVLIGKCQWeePiDYaG
      h5gcGiZrmgwPD6PnU7z0yhvrg5sf48rQJMNDQ/KRWFiUESWvQIXEEmcv3qC52kWEIuNrq8yO
      z7A0O8nK6roX3drSDBdv5gg7snR2Wa9DFuWNoAId2N/DhUvXURQ7+w4dIuC2oxsmC9OTDA4O
      Ek/l2NvVQP+Q+Di2sCg3Sp4AznAr+0J2WiJ+Ql4vXhSO3Xcf4XCYnXsPEA6HySZrMR0+wn4r
      YMai/CmZAJrTSxAINm8EirxV7uit/7p8QQCam8Vgkncbw1SJ5uVF9AzdBpL1fD61Az0vTlbN
      WY/DI+YT0Ysq11fEEkIALe5ZiqwIdpuikiy6BftSuomM5FyK6sbukv9+D1aelw2DRNHDcEpM
      i1LI5ChmxbYV1YPNIeZeyRk2Hqw4J9jdWo5Xtxz3HEHH9nNkpvNFonaxFJKigFOTBxvldEM6
      bq/mJV7wCnZNMah1ij4uHq3Acj4obeNo6DL50qwo5aUCWZXirUrxb/GuVIrfrAJlkyucOvU6
      k3OlMYhXzp0ilsozfHNU2oiFRTmxpQo0PjzMIx97kuefeZqZyhA2h4cjhw+ytBJj7VIfa4kU
      nR2izmxhUU5sqQJ5XRqrawlMxUYhGWUta3JtYABsHlxmhkyxbN6cLCy2ZEsVqLmpgRsD13js
      8cfJJNcwTYNIJEJdfT0Bj4PaWOZe9dnC4h3jtipQ7+49AHicG8ENFRXrq7fGWnFl/q6jgH2L
      XHZ1thEUsyDYU54ckVuKIwNUeyuodokqiZMCx8PynCWrRj35oi7YNaWIXxHztbR7MhwPp8U2
      NGjcItnGhcQhaUBMhX2FLlWs12APKEQkX3DZNCJeMZeJQ8nRlxDVnozu4nhYXg9iMNFANL/9
      7CB2EngUUWEwTYWsIc+v4lJzKJLF/7KrkqIkbKuIi6IqUfE0L5o8Zor+1D60WxLnlpUKlMkV
      eO6CXAV6hN/Bo4iymK04iWbGBHvC+Tgrvl8TP68vEUn9f9I2vp76U/KIE/9Y4By1TjG6zFm4
      gbvQL9hNFGkmZICHT/251CfmT3b9AfsDg9LvyNAVHwVbq2BPFR38zKnfFux+LckzR39Deq7j
      J/5PBpPbzxIYcJg0SOZL0YDZpPw79T6wSW5uj7cYtIdEe50XOiRKWqoA17bIHfXfrioUb1EK
      S/4Kpqlz6fx5KutbSa/MkihodDcEuTg0w472LlrqI/IzW1iUKSVzbuHGWYxwB00RG+PzWSKs
      cObydSpadnHlwul71UcLi3eNkgng9AVIrKyQzRsU82liiQwBrwNDz2OYVqlIi/cfJa9AFY07
      6dRHSOQdPHC4h0RBozbk4trQOB99QtyNs7Aod0pXYopCQ+tbcWBB3lpjHzwoJie1sHg/YL3X
      WHygkWpxpp7n/PkL1Ld2sjI7SsHmo8GvMjQbo72rl/qI3NvOwqLcKHkCrEzd4EevnuHcqy8T
      7jxAWIuxkPNjLo9x+cYQrbuOcuG03GPQwqIcKZkAdk+I4uo0aUMjFo2RNzTy6TUS2SIeh0ox
      n8bUHPeqrxYW7zglr0Bun5/a5i527dnN9OggBVcTh7oVClobIafJ0MQYT3z08XvVVwuLd5yS
      CWBzetm3b93/p7WjZ90Y2Nj6P1ghFn2+myiKiV8TU2QAGFRQlLgQKGocxZBFM2mopuino5hp
      FEO+Xx/PmWQljiM5vxNDEaOyAOm5FMWGoch9a9IFJMldQMeFoYhuGIqRRDXFlCyqqqAaErtZ
      JCW6TGEz5X0FcNkMPLbte8xoKtI2jNucIlNcT/QrtK3mqLCLvlwqNpbSol+RbuiEbPJxpIsh
      oZRWWWWHtisFdnrEKCCAgnGQojQvkBtTkhfIVD04dDGwX9MXcOgj0jb6l0xShvhX2huKUOMT
      J4CLC9JzGYqXvCrPCzSxpkh9gZJmHXmb6IjnzF+StqEbfmmEVa7gYnJNPH/IZmw57gZvnvwd
      ZMKM55C2cbu8QDMJeV6gWsciRyrleYFOTsvyAmX5VL3ofwUwvSbmBbolIGaRV/qGqKmppdIN
      E3NL7Dt4mL5TJwhWt7Bvl5UGxeL9hRARNj4XI5fPM1nI8MSj9/P8K6dQTAP77CDR9i7CrnvV
      VQuLdx5hI6y9ezfZ5CqmrrO2GsXtX/c5TWZ1nGX1wmRh8eMRIsICczfY+fBjhFwKw1MLPHLf
      bq5dKRBp7MRnTQCL9xlCRNihQxupN3b3rOfV2LVPTMdxLzBR0BV5iR2bOS+NCFPMNIophm8q
      ZhFTqgHYMLfwEHFoUJAoFRpFFFOmNBnSc5moYIoLWgBNMaUqkEIexRRTsihbtAEaJuLK1VQ0
      adoVTWXLced1yIpCzJYUDaRtKIC+RUFzVQFTsmg3FBdFSUSfqjlwS5Qpp01F30JhUxWEaLEy
      u6fbyGliRXYAX+4VNHNNsNv1SWz6rGDPa43SelWGmcLcQtIMu8AjkfLcagqbuSrYVbMgPZeJ
      HQV5oimXzZSqIXZzBZuxINgVMydtw1DcGKqYg8dQXbglf3WnxpbjjmZVFkXF+LbI2jBMyBTl
      8YpumymVQQtqFUlVlN8dDqR5j1yak5y9Z4s2VCHcVDoBZkZuMLEcp7ZhB4X4HKsZk32ddbx+
      cYjWHe20t4jyk4VFOVIyARKLE5y7PoOaWiLrDVOYHCS1ZrKvycaZSzdwVLZx/coFawJYvG8o
      eembGx+loXs3Ts3G3v17WVlepVjIshJPEfK7MI0i+u228ywsyoySJ0DnkYcZun6dzoOHmbh5
      k8c/8gTFZJRYxqS5OsDla0Mc/KgVGWbx/qFkAiiKSvfOXQBEqt7M6+Ku463sE4cOHrybfZNg
      oppioWrgTV8cUWIwFY/UT8dEA1MibZjFLRWanA45yQNQR8NA3OPfSu1RlK2UG9BNRZol2cCB
      gej7YipbtaFLx6eYulSJMUy2HLdDNXHegStE0UDIwgxgIleH3mpfNm6VHDbJOAzDRrog/h6K
      aaAaohgCoJsuYexlpQIpFHHpN6XHClqjtEaYTV+RVgg3VR+aKTpNqWYSFVFuBFjJQkpy8WQM
      H7pEwjAVu/RcBhoo8gRR2aLcF6ioVKJrohRj0+elbZimHU0i/6qGSVYXz59V2HLcYbeJxLVn
      S97JGmF2fRGfKfoCTefCTCVkvkA5XFvkT8oWI7f3BVpdnufshSt079rH2uIkBc3H/t5WzvVd
      pqWjh9qIJEORhUUZU/IcDkVqKRSK1LqSzGd9sDLGM8+doHnvYevit3hfIn0R1Rze9UiwTJGa
      sJeV6CqZrPzxaGFRzghrgPvuO4bNX8nhnhwFrZ2GmjBjwzfIFb3I9wktLMoXYQK8VQuspqHl
      bVtblzx4426TN1T6luQZKQ4GpnFqonuBoXgoaOJiqahWoSviXrquGCwi931q80yRM8XbQFBd
      waaLT8is6ZOeS1WcODV5dN2R6qR0Meh2VlBQxRV4Xs2whuijXjC8JHNi9uuM7uBItbj492m5
      Lcdd6XGR1ba//xNxFWnwiH8LBQXNJr+NFosZkPgCxXI2zi6IkXAFI0eDY1yw2xSdyyvya2Rf
      OEbRKH3pKavs0HNrRY7+8bj02I8+9L/T6BEL2KUc95O37RDsRSVEUasV7JmiyrVVeSG+jzh+
      H7siKiuG4pZmex4t3MdQ8VHB7tdS7AnIo6/WL35xAhTUWkxFvNBnUg7mM2KigngORuMSVUXV
      +Sed1wR70dA4F5ff6FJ5eZjmVtS5YuwJijXFdOwk1G7pdwLGDVSJ09v/9HoLz02K689/3HaG
      P9j7jGAfStTy5fO/Lm3je4+9gPuWqLqS6WCaOhfPnWFiZuEtA6+8fELSrTcxdIZuyv+QFhbl
      QMltaz07dBdNtXb+/q+/wX0PHWFufJgrIz1Ehy/Ss7uXgf5h9nQ3cG5wjtpwBSND1xibmKZ3
      Rx0Do7O0RLzMzs1TUd9GMrZAx56jNITlLswWFvcaaXboTCaBL9zMytQo4bYuxq5dwutyMjYx
      i8tpMjYyiruihuWFWUKRGorZFFev9jM8cpOxqXnCXo3+SxfJ4kC7o4enhcXdRZodOpl1cd99
      u4Ei+ysrWF5eZmVxnkhDK/OTo1QHNL57epIvfupx8tk0mCaFTIIew4GZmOO5l07zxS//CvNj
      NwkF7kEpJQuLbXKb7NAbRCJVRCLrqkXlnn0A/GrL7vWDnrcWZm/lkq7nN3etqwlVe/e8o511
      qAWOheRpURaLDeSzlYLdbavGLlF78qaHdEFcuBYNg5AmlloC6F9rlkadOWwONFV0lsloLum5
      nKpO2pDfGNZych+hgKuAXROfpm4lQ0hSFMthL1J0iq4TmgILGbFtA2XLcducIYw78JpRFLu0
      DVOxYWzhCpEteFAkvkjNnhXuj4glrtxagVPLrYJ9Je9nf4W8xttUOoT9FiWtrFQgM7dAsU+e
      me7fzP1nYrpYmO2xZpNucV6wkoFZMW8UHiXBQc8JaRufP/FxkkVRcWn0m/glGSMfrR7mUw1i
      4bmUWcGY/qC0jTNzIFOBnqi9To1L4rtkrKHJEmMZK7iKotqTN5x8delfC3aHmueXGp6T9mnN
      +QiGuv0ieRNrcH5epkCZtG3hUDASQ6jfBfBE8Ft0ugcE+1+OHOVf9X9CsO8MRXnm8e9L2/jf
      Bn6evFk6A4XbzeWzJ4mm1nWfoeEheW83YRQz3BiyqsZblCe3FMkrMj8/x2L2CkEtQd+NcYxs
      ipn5FRxOO6qZxReuZ3kpSsCt4o60korOY5pFnvr7NwhVVNKzdx9jwxMkcwWOHTtKyGclErJ4
      71LyBFidHCCqV7IwN8rCyhp1kRCXL/bh8jqJriRorg9x6eJVmjq7WVrLc/XEP+CONBJdieIK
      VhN2mcRiMeIZA60YZ2ZBDBS3sHgvUZocN9DEFz6zj/jKMoqeYzFRoK2ugsHxOXq6evF67Hz2
      c3uZnRjh8UcfZXGui7qGahpC96OoKn63ndGJGY4d7GV2Zpr25nubTNfC4sdRMgH8FeurxUhk
      vR5w+M015d5dG74VLiDwZtRYY1PT+ufCGxW7u7u737RJVp4/JQXTztXkLumxaucqAVNUSfya
      E1UiPRiGjUxRfD0zFY2lvFiBHKA3FCOni2pP2OPAbRftLrtNeq6C4kfdojhVjVOe/dqhFEAy
      vpTuIScZh2Y6cBmif1IROzVO8clsU/Qtx51TNIw7KaZl5qlxii4jNlXFa5OrX9WuFLohjm8u
      GyKRbRXsBdzcVyWqPVWuNKeXRBcXgEZvEoMy9gVaThb50l/LK8X/3/u/QbVEJclpreia+Ie9
      mQhzbqVZsKuKiXcLqe6T4edwqKIMmtMapSrJaCLEYEIsLu61Q5ekyjlAI68JuWtux/VEC8Pp
      JsGuKUijrzSKPFQh1nzOGzaeW7pP2obHLiaUuh01jkV2ekUBxcBB1rFP+h1X/hIq4m/7B5d6
      ODlfLdg/23Sdf95zVrAPxCr5xI8+LW3j4udP4bGVTjLpvDbN9Xd5gKXlZTBN5ufFpEwWFuVO
      ySuQkY0xtpCGTJyC5uXm4A0W4xkOd9fz/ZNX+Se//Pl71U8Li3eFkgkwM3Sd+USRVKpIwG/D
      HqonqKY53XcF1x1UCLGwKBdKJkB1+y7iY/P07qoh4HUyODhCR08r5s4uzIK4qLGwKHdK06N7
      g+zevaH47Nq9e9PRe7+hZVN1egNyPw/N5kFXRCVGNdMouhid5FVVIi4xYkojS5BhaRvXVoPS
      skNVQR8eh6REkrJCnTol2J2KHbcpV8n6ovJopp2BaQI28SYUpECdKvrwaAqSLELrMVfnt4iq
      q1MvSu0T6V7y5vb//inNQTottmEqdnS7XE6yFQLSPEYBe569FWKgk88OIynR9WWl6OVotVxJ
      u7AcwK6W/v3KSgXS83FWr/076bG0fb80YsqXfQFXUcwTk7YfYs31KcFuL07SEP8taRsPnXuO
      hC461v36PoO9ki2P+vzXaMn/Z8FeVKtIuuUZ9nZ977+XhkR+49gfcbRSDD6yFWelWaO3IlH0
      0P3Ki4I9aFvj+sMfk37nV298jcmcGFW3FatZmJHUqVNgS4UtVZAFRMK/PXKJJxrFm94by808
      PStGsNW6k/xG9xVpG/u/eb+QF6h0Opomw9f7GZ+W32WNYoZodI3YqrXDa/H+oNQXyMhw5nw/
      n/n8FwAwCmnOnrtEXW0NkzOz1FW4yTjDuN1BKqw0QRbvA27xBRqk9cCDuJQ8CytrjPefI9J1
      kJGxcUL2IgPTSdT4HIGwdfVbvD8oeQLYK5pwr0xQNNd3L1t2H+Ha8ASH9u9mJW3wcM/6Qi/k
      vpN9cQuL9y4lE8AXinDo0PrF735T1Niza923Jyh3E7mrKBjSckcA07mj5BFLAjVpDVRICkwn
      zFoWM+KKzGW6qdJEFwmAgqFKsx7PJsEjCZiy2QLU2cRz5ZUIK0V5kZFGv7xWls0eoKiKypGp
      GRiSRLuKmUeTJJVFddPoF8/v11TyW4y7JWjDWdi+VhLNIHXnUBUIyXMCs5qVp17xaavYdHFN
      qhdCxHPi5/2aiWpIIp2ASrdJtlg6jvLKDm1m8Weelh779uSXWZZcVJ9qb2KPRKEZi8OlRVnF
      dJW6ul+UthHLOVgT3VX4h2FV6nfzuZZdtHaI51otVtCXfEDaxue7TWQRYf5ALxmHKPtthU2f
      w5d7TbAriosvSFLzOFQ7ca983F/aE8BQtz8BJtegb0Ecg+3HRITpkoiwLudlAlnRdymVgKvL
      ou9Szp/HoU9I2zhWp5O/xauv5F+FxCIvnnidhahcR9VTUUZmooI9sTzN6OgIY7NRLpw/S6Zg
      ZYKwKA/ESvHzq3Q2zfHy1SuEK4MsLKywa2cn48M3CAX8zBQrCGtrXByaJ+ixEY/HqQ65WDM8
      GOYaVy5eJZfPk07ncTo1TLuT9EqUIiqKzcGTH33sXo3VwkJAWileX51hJpYlH5/DU93G6tQw
      i6tRpmbXdxznxsdo6tnN7Ow8rVUeppbW0PNpsjhp3dHKSiyOX8sxPhvjyJGD6IoDl9OFc4tN
      EAuLe4VQKX6/XyPkayLvvEpdaxfR2TEqm/djCy9TVVGBaXdT4W9j8PoNPvzYI0zOLPHhh3aT
      LZgYig2jWIdLM5hfzfLkXhcO1caxo4dQZUVgLSzuMUKl+Io3V+k9u/cCEHwzM3QoVLp66Xkz
      Kqy3az0QZGNxvx7x077JFeQdiw5TbORs8uSqGd1BWrJAHVkF2ZIkUwSPxMNVUTWuxuSS157K
      JFlJRBiqR5ocN6u7pedKGX5mt/AtbLANytbAzCbtLKe3L8U5TAiZYsFo3bTRYL8h2FXMLcfd
      EhrEfQcRMSHDToNdlHtsiklYUu0eIGt3SRfBDpudvNYo2IOeELsi4t+vya2iK/JUnJ2eUYpm
      6d+vrHyBioUMs8M/kh77H15tYykrJueZTcKapCj7I00mX94tDn0pDX/RL9/n+C8PncZnF3XQ
      E0s9zGTEST60AteislpZYNtiK+WZI78irZj+2wP/M/0J+eSX4bWbNMkqqasZ/kP7PxPsa0UP
      nz3/n6Tn+uveL7LDLY/Ek6GrIYo2MUoNs4C9OC39TsHWJL2JJJyPk7eJydryajU5iWyrmmk8
      urxGWCj9dZRbUj3fsghe5JW+QZqbW5meuMmHH3mYF178EW1NVTgCzeRXRkkZDiINbSSXZ+jq
      7pYWoLOwKBf+f3g/8Zv3qCZaAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
